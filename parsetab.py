
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftEXTENDleftSTRUCTleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCALREC LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS PROC RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionassign_list : IDENTIFIER ASSIGN expression\n| assign_list COMMA IDENTIFIER ASSIGN expressionexpression : PROC LPAREN identifier_list RPAREN identifier_list ARROW expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n| expression GREATER_THEN expression\n| expression LESS_EQUALS expression\n| expression GREATER_EQUALS expression\n| expression EQUALS expression\n| expression NOT_EQUALS expressionprogram : expressionexpression : NUMBER\n| FLOAT\n| CHAR\n| STRINGidentifier_list : IDENTIFIER\n| IDENTIFIER COMMA identifier_listexpression : LOOP expression DO expressionexpression : PROC LPAREN RPAREN identifier_list ARROW expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n| expression COMMA expression_listexpression : PROC LPAREN identifier_list RPAREN ARROW expressionbody : expression\n| body SEPARATOR expressionexpression : MINUS expression %prec UMINUSexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n| expression NAND expression\n| expression OR expression\n| expression NOR expression\n| expression XOR expression\n| expression EQ expression\n| expression NEQ expression\n| expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : LOCAL assign_list IN expressionexpression : LOCK identifier_list IN expressiondots : DOT\n| dots DOTexpression : LIST LPAREN expression_list RPARENexpression : LAMBDA LPAREN RPAREN ARROW expression\n| LAMBDA identifier_list ARROW expression\n| LAMBDA LPAREN identifier_list RPAREN ARROW expressionexpression : PROC LPAREN RPAREN ARROW expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : LOCALREC assign_list IN expressionexpression : LIST LPAREN RPARENstruct_body : IDENTIFIER ASSIGN expression\n| struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : LBRACKET expression_list RBRACKET\n| ARRAY LPAREN expression_list RPARENexpression : LPAREN expression RPARENexpression : TRUE\n| FALSEexpression : STRUCT BEGIN struct_body ENDexpression : LAMBDA ARROW expressionexpression : LBRACKET RBRACKET\n| ARRAY LPAREN RPARENexpression : expression dots IDENTIFIERexpression : expression LPAREN expression_list RPARENexpression : dots IDENTIFIERexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : expression LPAREN RPARENexpression : EXTEND expression BEGIN struct_body END'
    
_lr_action_items = {'FOR':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PROC':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NUMBER':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'CHAR':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'STRING':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOOP':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BEGIN':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,22,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,59,61,66,68,72,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,108,110,111,113,114,117,120,121,122,123,124,126,130,134,135,136,138,139,140,143,145,146,148,149,151,152,154,156,158,159,160,161,162,163,164,167,169,170,171,172,174,175,176,177,179,],[12,12,12,12,-13,-14,-15,-16,12,12,-22,12,12,12,12,-61,-62,75,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-23,-30,12,12,-65,12,-69,129,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,12,-60,12,12,-21,12,-31,12,12,12,12,-55,-64,12,12,-58,12,-66,-68,12,-5,-19,-70,-24,-41,-42,-45,12,-47,-54,-59,-63,12,12,12,12,-49,12,12,-46,12,-72,12,-27,-20,-40,-48,12,12,-4,-1,]),'IDENTIFIER':([0,3,5,6,11,12,14,15,16,17,18,20,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,57,58,66,67,68,74,75,77,100,102,104,105,107,110,111,112,113,114,115,121,122,124,129,132,134,146,153,154,156,158,159,161,162,164,169,175,176,],[13,13,13,13,13,13,13,13,13,63,65,65,63,13,76,13,-43,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,97,13,65,13,13,13,65,13,13,128,-44,13,65,13,13,13,13,13,141,13,13,65,13,13,13,128,65,13,13,165,13,13,13,13,13,13,13,13,13,13,]),'NOT':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IF':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'MINUS':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,22,24,25,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,56,57,58,59,60,61,66,68,72,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,113,114,117,120,121,122,123,124,126,130,131,134,135,136,137,138,139,140,142,143,145,146,148,149,151,152,154,156,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,],[16,45,16,16,16,-13,-14,-15,-16,16,16,-22,16,16,16,16,-61,-62,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,45,45,45,45,45,16,16,-23,45,-30,16,16,-65,45,16,-69,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-50,-51,-52,-53,-67,-71,16,-60,16,16,-21,16,45,45,16,16,16,16,-55,45,16,16,-58,16,-66,-68,45,16,45,45,45,-70,45,45,45,45,-45,16,45,45,-59,-63,16,16,16,16,45,16,16,45,16,45,-72,45,16,45,45,45,45,45,16,16,45,45,45,]),'LOCAL':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LOCK':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LIST':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LAMBDA':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LOCALREC':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LBRACKET':([0,3,5,6,11,12,13,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[22,22,22,22,22,22,58,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ARRAY':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,22,23,24,25,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,56,57,58,59,60,61,66,68,72,73,74,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,113,114,117,120,121,122,123,124,126,130,131,134,135,136,137,138,139,140,142,143,145,146,148,149,151,152,154,156,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,],[5,49,5,51,5,5,-13,-14,-15,-16,5,5,-22,5,5,5,66,67,5,74,-61,-62,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,49,49,49,49,49,5,5,49,49,49,5,5,-65,49,5,-69,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-67,-71,5,-60,5,5,-21,5,49,49,5,5,5,5,-55,49,5,5,-58,5,-66,-68,49,5,49,49,49,-70,49,49,49,49,-45,5,49,49,-59,-63,5,5,5,5,49,5,5,49,5,49,-72,49,5,49,49,49,49,49,5,5,49,49,49,]),'TRUE':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FALSE':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'STRUCT':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'EXTEND':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DOT':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,22,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,56,57,58,59,60,61,66,68,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,113,114,117,120,121,122,123,124,126,130,131,134,135,136,137,138,139,140,142,143,145,146,148,149,151,152,154,156,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,],[29,29,29,29,29,-13,-14,-15,-16,29,29,-22,29,29,29,29,-61,-62,77,29,-43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,77,29,29,29,29,29,29,29,29,29,29,29,29,29,-65,29,29,-69,-44,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-67,-71,29,-60,29,29,-21,29,29,29,29,29,29,29,-55,29,29,29,-58,29,-66,-68,29,29,29,29,29,-70,29,29,29,29,-45,29,29,29,-59,-63,29,29,29,29,29,29,29,29,29,29,-72,29,29,29,29,29,29,29,29,29,29,29,29,]),'$end':([1,2,7,8,9,10,13,24,25,59,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,143,145,148,149,151,152,160,163,167,170,171,172,174,177,179,],[0,-12,-13,-14,-15,-16,-22,-61,-62,-23,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-42,-45,-47,-54,-59,-63,-49,-46,-72,-27,-20,-40,-48,-4,-1,]),'LESS_THEN':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[30,-13,-14,-15,-16,-22,-61,-62,30,30,30,30,30,-23,30,-30,-65,30,-69,30,-6,-7,-8,-9,30,30,30,30,30,30,30,30,30,30,-50,-51,-52,-53,-67,-71,-60,-21,30,30,-55,30,-58,-66,-68,30,30,30,30,-70,30,30,30,30,-45,30,30,-59,-63,30,30,30,-72,30,30,30,30,30,30,30,30,30,]),'GREATER_THEN':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[31,-13,-14,-15,-16,-22,-61,-62,31,31,31,31,31,-23,31,-30,-65,31,-69,31,-6,-7,-8,-9,31,31,31,31,31,31,31,31,31,31,-50,-51,-52,-53,-67,-71,-60,-21,31,31,-55,31,-58,-66,-68,31,31,31,31,-70,31,31,31,31,-45,31,31,-59,-63,31,31,31,-72,31,31,31,31,31,31,31,31,31,]),'LESS_EQUALS':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[32,-13,-14,-15,-16,-22,-61,-62,32,32,32,32,32,-23,32,-30,-65,32,-69,32,-6,-7,-8,-9,32,32,32,32,32,32,32,32,32,32,-50,-51,-52,-53,-67,-71,-60,-21,32,32,-55,32,-58,-66,-68,32,32,32,32,-70,32,32,32,32,-45,32,32,-59,-63,32,32,32,-72,32,32,32,32,32,32,32,32,32,]),'GREATER_EQUALS':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[33,-13,-14,-15,-16,-22,-61,-62,33,33,33,33,33,-23,33,-30,-65,33,-69,33,-6,-7,-8,-9,33,33,33,33,33,33,33,33,33,33,-50,-51,-52,-53,-67,-71,-60,-21,33,33,-55,33,-58,-66,-68,33,33,33,33,-70,33,33,33,33,-45,33,33,-59,-63,33,33,33,-72,33,33,33,33,33,33,33,33,33,]),'EQUALS':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[34,-13,-14,-15,-16,-22,-61,-62,34,34,34,34,34,-23,34,-30,-65,34,-69,34,-6,-7,-8,-9,-10,-11,34,34,34,34,34,34,34,34,-50,-51,-52,-53,-67,-71,-60,-21,34,34,-55,34,-58,-66,-68,34,34,34,34,-70,34,34,34,34,-45,34,34,-59,-63,34,34,34,-72,34,34,34,34,34,34,34,34,34,]),'NOT_EQUALS':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[35,-13,-14,-15,-16,-22,-61,-62,35,35,35,35,35,-23,35,-30,-65,35,-69,35,-6,-7,-8,-9,-10,-11,35,35,35,35,35,35,35,35,-50,-51,-52,-53,-67,-71,-60,-21,35,35,-55,35,-58,-66,-68,35,35,35,35,-70,35,35,35,35,-45,35,35,-59,-63,35,35,35,-72,35,35,35,35,35,35,35,35,35,]),'AND':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[36,-13,-14,-15,-16,-22,-61,-62,36,36,36,36,36,-23,36,-30,-65,36,-69,36,-6,-7,-8,-9,-10,-11,-32,-33,36,36,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,36,36,-55,36,-58,-66,-68,36,36,36,36,-70,36,36,36,36,-45,36,36,-59,-63,36,36,36,-72,36,36,36,36,36,36,36,36,36,]),'NAND':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[37,-13,-14,-15,-16,-22,-61,-62,37,37,37,37,37,-23,37,-30,-65,37,-69,37,-6,-7,-8,-9,-10,-11,-32,-33,37,37,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,37,37,-55,37,-58,-66,-68,37,37,37,37,-70,37,37,37,37,-45,37,37,-59,-63,37,37,37,-72,37,37,37,37,37,37,37,37,37,]),'OR':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[38,-13,-14,-15,-16,-22,-61,-62,38,38,38,38,38,-23,38,-30,-65,38,-69,38,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,38,38,-55,38,-58,-66,-68,38,38,38,38,-70,38,38,38,38,-45,38,38,-59,-63,38,38,38,-72,38,38,38,38,38,38,38,38,38,]),'NOR':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[39,-13,-14,-15,-16,-22,-61,-62,39,39,39,39,39,-23,39,-30,-65,39,-69,39,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,39,39,-55,39,-58,-66,-68,39,39,39,39,-70,39,39,39,39,-45,39,39,-59,-63,39,39,39,-72,39,39,39,39,39,39,39,39,39,]),'XOR':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[40,-13,-14,-15,-16,-22,-61,-62,40,40,40,40,40,-23,40,-30,-65,40,-69,40,-6,-7,-8,-9,-10,-11,40,40,40,40,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,40,40,-55,40,-58,-66,-68,40,40,40,40,-70,40,40,40,40,-45,40,40,-59,-63,40,40,40,-72,40,40,40,40,40,40,40,40,40,]),'EQ':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[41,-13,-14,-15,-16,-22,-61,-62,41,41,41,41,41,-23,41,-30,-65,41,-69,41,-6,-7,-8,-9,-10,-11,41,41,41,41,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,41,41,-55,41,-58,-66,-68,41,41,41,41,-70,41,41,41,41,-45,41,41,-59,-63,41,41,41,-72,41,41,41,41,41,41,41,41,41,]),'NEQ':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[42,-13,-14,-15,-16,-22,-61,-62,42,42,42,42,42,-23,42,-30,-65,42,-69,42,-6,-7,-8,-9,-10,-11,42,42,42,42,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,42,42,-55,42,-58,-66,-68,42,42,42,42,-70,42,42,42,42,-45,42,42,-59,-63,42,42,42,-72,42,42,42,42,42,42,42,42,42,]),'IMPL':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[43,-13,-14,-15,-16,-22,-61,-62,43,43,43,43,43,-23,43,-30,-65,43,-69,43,-6,-7,-8,-9,-10,-11,43,43,43,43,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,43,43,-55,43,-58,-66,-68,43,43,43,43,-70,43,43,43,43,-45,43,43,-59,-63,43,43,43,-72,43,43,43,43,43,43,43,43,43,]),'PLUS':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[44,-13,-14,-15,-16,-22,-61,-62,44,44,44,44,44,-23,44,-30,-65,44,-69,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-50,-51,-52,-53,-67,-71,-60,-21,44,44,-55,44,-58,-66,-68,44,44,44,44,-70,44,44,44,44,-45,44,44,-59,-63,44,44,44,-72,44,44,44,44,44,44,44,44,44,]),'TIMES':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[46,-13,-14,-15,-16,-22,-61,-62,46,46,46,46,46,-23,46,-30,-65,46,-69,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-52,-53,-67,-71,-60,-21,46,46,-55,46,-58,-66,-68,46,46,46,46,-70,46,46,46,46,-45,46,46,-59,-63,46,46,46,-72,46,46,46,46,46,46,46,46,46,]),'DIVIDE':([2,7,8,9,10,13,24,25,50,52,53,54,56,59,60,61,72,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,131,135,136,137,138,139,140,142,143,145,148,149,151,152,160,163,166,167,168,170,171,172,173,174,177,178,179,],[47,-13,-14,-15,-16,-22,-61,-62,47,47,47,47,47,-23,47,-30,-65,47,-69,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-52,-53,-67,-71,-60,-21,47,47,-55,47,-58,-66,-68,47,47,47,47,-70,47,47,47,47,-45,47,47,-59,-63,47,47,47,-72,47,47,47,47,47,47,47,47,47,]),'SEPARATOR':([7,8,9,10,13,24,25,50,55,56,59,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,127,130,131,135,136,137,138,139,140,143,145,148,149,151,152,155,160,163,166,167,170,171,172,174,177,178,179,],[-13,-14,-15,-16,-22,-61,-62,100,107,-28,-23,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,153,-68,156,-5,-19,-29,-70,-24,-41,-42,-45,-47,-54,-59,-63,153,-49,-46,-56,-72,-27,-20,-40,-48,-4,-57,-1,]),'RPAREN':([7,8,9,10,13,24,25,49,51,52,59,61,65,66,67,72,73,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,106,108,116,117,119,120,123,125,126,130,135,136,138,139,140,143,144,145,148,149,150,151,152,160,163,167,170,171,172,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,99,102,103,-23,-30,-17,117,118,-65,-25,126,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,130,-71,132,-60,-21,-31,145,-55,147,-64,-58,151,-66,-68,-5,-19,-70,-24,-41,-42,-18,-45,-47,-54,-26,-59,-63,-49,-46,-72,-27,-20,-40,-48,-4,-1,]),'DO':([7,8,9,10,13,24,25,53,54,59,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,143,145,148,149,151,152,160,163,167,168,170,171,172,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,104,105,-23,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-42,-45,-47,-54,-59,-63,-49,-46,-72,176,-27,-20,-40,-48,-4,-1,]),'END':([7,8,9,10,13,24,25,55,56,59,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,127,130,135,136,137,138,139,140,143,145,148,149,151,152,155,160,163,166,167,170,171,172,174,177,178,179,],[-13,-14,-15,-16,-22,-61,-62,106,-28,-23,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,152,-68,-5,-19,-29,-70,-24,-41,-42,-45,-47,-54,-59,-63,167,-49,-46,-56,-72,-27,-20,-40,-48,-4,-57,-1,]),'THEN':([7,8,9,10,13,24,25,59,60,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,143,145,148,149,151,152,160,163,167,170,171,172,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,-23,110,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-42,-45,-47,-54,-59,-63,-49,-46,-72,-27,-20,-40,-48,-4,-1,]),'COMMA':([7,8,9,10,13,24,25,59,61,62,65,70,72,73,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,142,143,145,148,149,151,152,160,163,167,170,171,172,173,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,-23,-30,112,115,112,-65,124,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-2,-42,-45,-47,-54,-59,-63,-49,-46,-72,-27,-20,-40,-3,-48,-4,-1,]),'RBRACKET':([7,8,9,10,13,22,24,25,59,61,71,72,73,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,109,117,120,123,126,130,135,136,138,139,140,143,145,148,149,150,151,152,160,163,167,170,171,172,174,177,179,],[-13,-14,-15,-16,-22,72,-61,-62,-23,-30,123,-65,-25,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,138,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-42,-45,-47,-54,-26,-59,-63,-49,-46,-72,-27,-20,-40,-48,-4,-1,]),'ELSE':([7,8,9,10,13,24,25,59,61,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,143,145,148,149,151,152,160,163,167,170,171,172,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,-23,-30,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,161,-41,-42,-45,-47,-54,-59,-63,-49,-46,-72,-27,-20,-40,-48,-4,-1,]),'IN':([7,8,9,10,13,24,25,59,61,62,64,65,70,72,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,103,106,108,117,120,123,126,130,135,136,138,139,140,142,143,144,145,148,149,151,152,160,163,167,170,171,172,173,174,177,179,],[-13,-14,-15,-16,-22,-61,-62,-23,-30,111,114,-17,122,-65,-69,-6,-7,-8,-9,-10,-11,-32,-33,-34,-35,-36,-37,-38,-39,-50,-51,-52,-53,-67,-71,-60,-21,-31,-55,-64,-58,-66,-68,-5,-19,-70,-24,-41,-2,-42,-18,-45,-47,-54,-59,-63,-49,-46,-72,-27,-20,-40,-3,-48,-4,-1,]),'ASSIGN':([13,63,128,141,165,],[57,113,154,162,175,]),'ARROW':([20,65,69,102,118,132,133,144,147,157,],[68,-17,121,134,146,158,159,-18,164,169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,57,58,66,68,74,100,104,105,107,110,111,113,114,121,122,124,134,146,154,156,158,159,161,162,164,169,175,176,],[2,50,52,53,54,56,59,60,61,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,73,108,109,73,120,73,131,135,136,137,139,140,142,143,148,149,73,160,163,166,168,170,171,172,173,174,177,178,179,]),'dots':([0,2,3,5,6,11,12,14,15,16,22,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,56,57,58,59,60,61,66,68,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,104,105,107,108,109,110,111,113,114,120,121,122,124,131,134,135,136,137,139,140,142,143,146,148,149,154,156,158,159,160,161,162,163,164,166,168,169,170,171,172,173,174,175,176,177,178,179,],[27,48,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,48,48,48,48,48,27,27,48,48,48,27,27,48,27,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,27,27,27,27,48,48,27,27,27,27,48,27,27,27,48,27,48,48,48,48,48,48,48,27,48,48,27,27,27,27,48,27,27,48,27,48,48,27,48,48,48,48,48,27,27,48,48,48,]),'body':([12,],[55,]),'assign_list':([17,21,],[62,70,]),'identifier_list':([18,20,51,67,102,115,132,],[64,69,101,119,133,144,157,]),'expression_list':([22,49,66,74,124,],[71,98,116,125,150,]),'struct_body':([75,129,],[127,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('assign_list -> IDENTIFIER ASSIGN expression','assign_list',3,'p_assign_list','local_expr.py',10),
  ('assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression','assign_list',5,'p_assign_list','local_expr.py',11),
  ('expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression','expression',7,'p_expression_nm_proc','proc_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('program -> expression','program',1,'p_program','program_expr.py',11),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','lock_expr.py',14),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_identifier_list','lock_expr.py',15),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> PROC LPAREN RPAREN identifier_list ARROW expression','expression',6,'p_expression_0m_proc','proc_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequence_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lambda_expr.py',16),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lambda_expr.py',17),
  ('expression -> PROC LPAREN identifier_list RPAREN ARROW expression','expression',6,'p_expression_n0_proc','proc_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequence_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequence_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> LOCAL assign_list IN expression','expression',4,'p_expression_local','local_expr.py',19),
  ('expression -> LOCK identifier_list IN expression','expression',4,'p_expression_lock','lock_expr.py',19),
  ('dots -> DOT','dots',1,'p_dots','struct_expr.py',20),
  ('dots -> dots DOT','dots',2,'p_dots','struct_expr.py',21),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list_non_empty','datatypes.py',21),
  ('expression -> LAMBDA LPAREN RPAREN ARROW expression','expression',5,'p_expression_n_lambda','lambda_expr.py',21),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',22),
  ('expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression','expression',6,'p_expression_n_lambda','lambda_expr.py',23),
  ('expression -> PROC LPAREN RPAREN ARROW expression','expression',5,'p_expression_00_proc','proc_expr.py',22),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',23),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',24),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',25),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',26),
  ('expression -> LOCALREC assign_list IN expression','expression',4,'p_expression_localrec','local_expr.py',24),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',25),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',26),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array_non_empty','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array_non_empty','datatypes.py',30),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',30),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',33),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> expression dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',34),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',37),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',38),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',41),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',42),
]
