
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftEXTENDleftSTRUCTleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCALREC LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS PRINTF PROC RBRACKET RPAREN SEPARATOR SIZE STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionassign_list : IDENTIFIER ASSIGN expression\n| assign_list COMMA IDENTIFIER ASSIGN expressionexpression : PROC LPAREN identifier_list RPAREN identifier_list ARROW expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n| expression GREATER_THEN expression\n| expression LESS_EQUALS expression\n| expression GREATER_EQUALS expression\n| expression EQUALS expression\n| expression NOT_EQUALS expressionprogram : expressionexpression : NUMBER\n| FLOAT\n| CHARidentifier_list : IDENTIFIER\n| IDENTIFIER COMMA identifier_listexpression : LOOP expression DO expressionexpression : PROC LPAREN RPAREN identifier_list ARROW expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n| expression COMMA expression_listexpression : PROC LPAREN identifier_list RPAREN ARROW expressionbody : expression\n| body SEPARATOR expressionexpression : MINUS expression %prec UMINUSexpression : expression AND expression\n| expression NAND expression\n| expression OR expression\n| expression NOR expression\n| expression XOR expression\n| expression EQ expression\n| expression NEQ expression\n| expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : LOCAL assign_list IN expressionexpression : LOCK identifier_list IN expressionexpression : STRINGdots : DOT\n| dots DOTexpression : LAMBDA LPAREN RPAREN ARROW expression\n| LAMBDA identifier_list ARROW expression\n| LAMBDA LPAREN identifier_list RPAREN ARROW expressionexpression : PROC LPAREN RPAREN ARROW expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : expression ASSIGN expressionexpression : LOCALREC assign_list IN expressionexpression : LIST LPAREN expression_list RPARENstruct_body : IDENTIFIER ASSIGN expression\n| struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : LIST LPAREN RPARENexpression : LPAREN expression RPARENexpression : TRUE\n| FALSEexpression : STRUCT BEGIN struct_body ENDexpression : LBRACKET expression_list RBRACKET\n| ARRAY LPAREN expression_list RPARENexpression : LAMBDA ARROW expressionexpression : expression dots IDENTIFIERexpression : expression LPAREN expression_list RPARENexpression : LBRACKET RBRACKET\n| ARRAY LPAREN RPARENexpression : dots IDENTIFIERexpression : expression LPAREN RPARENexpression : EXTEND expression BEGIN struct_body ENDexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : SIZE LPAREN IDENTIFIER RPARENexpression : PRINTF LPAREN expression_list RPAREN'
    
_lr_action_items = {'FOR':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PROC':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NUMBER':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FLOAT':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'CHAR':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOOP':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BEGIN':([0,3,5,6,7,8,9,10,11,12,13,14,15,18,22,23,24,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,61,63,69,72,75,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,117,118,122,123,124,126,129,130,132,136,140,141,142,144,145,146,149,151,153,154,155,156,158,160,162,163,164,166,167,168,169,170,171,172,175,177,178,179,180,182,183,184,185,187,],[11,11,11,11,-13,-14,-15,11,11,-21,11,11,11,-41,-59,-60,73,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-22,-29,11,11,-67,11,-69,133,11,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,11,-58,11,11,-20,11,11,11,11,11,-64,11,11,-57,-62,11,-68,-66,11,-5,-18,-72,-23,-39,-40,11,-45,-53,-54,-61,11,-63,-73,-74,11,11,11,-47,11,11,-44,11,-71,11,-26,-19,-38,-46,11,11,-4,-1,]),'IDENTIFIER':([0,3,5,6,10,11,13,14,15,16,17,19,20,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,68,69,72,73,77,79,81,82,105,107,109,110,112,114,115,116,117,118,119,123,124,130,133,138,140,151,157,158,164,166,167,169,170,172,177,183,184,],[12,12,12,12,12,12,12,12,12,65,67,67,65,12,78,12,-42,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,102,12,67,12,67,12,12,128,12,-43,134,12,12,67,12,12,12,12,12,147,12,12,67,12,12,12,128,67,12,12,173,12,12,12,12,12,12,12,12,12,12,]),'NOT':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'MINUS':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,18,22,23,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,57,59,60,61,62,63,69,72,75,76,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,108,109,110,111,112,113,114,115,117,118,122,123,124,126,129,130,132,136,137,140,141,142,143,144,145,146,148,149,151,153,154,155,156,158,160,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,],[15,47,15,15,15,-13,-14,-15,15,15,-21,15,15,15,-41,-59,-60,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,47,47,47,47,47,15,-22,47,-29,15,15,-67,47,15,-69,47,15,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-48,-49,-50,-51,47,-65,-70,15,-58,15,15,-20,15,47,15,15,15,15,47,15,15,-57,-62,15,-68,-66,47,15,47,47,47,-72,47,47,47,47,15,47,47,-54,-61,15,-63,-73,-74,15,15,15,47,15,15,47,15,47,-71,47,15,47,47,47,47,47,15,15,47,47,47,]),'LOCAL':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'LOCK':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'STRING':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LAMBDA':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LOCALREC':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LIST':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,21,22,23,25,26,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,57,59,60,61,62,63,69,72,75,76,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,108,109,110,111,112,113,114,115,117,118,122,123,124,126,129,130,132,136,137,140,141,142,143,144,145,146,148,149,151,153,154,155,156,158,160,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,],[5,52,5,54,5,5,-13,-14,-15,5,5,-21,5,5,5,-41,68,72,-59,-60,5,77,5,81,82,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,52,52,52,52,52,5,52,52,52,5,5,-67,52,5,-69,52,5,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-65,-70,5,-58,5,5,-20,5,52,5,5,5,5,52,5,5,-57,-62,5,-68,-66,52,5,52,52,52,-72,52,52,52,52,5,52,52,-54,-61,5,-63,-73,-74,5,5,5,52,5,5,52,5,52,-71,52,5,52,52,52,52,52,5,5,52,52,52,]),'TRUE':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STRUCT':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'LBRACKET':([0,3,5,6,10,11,12,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[25,25,25,25,25,25,60,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'ARRAY':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'EXTEND':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'SIZE':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PRINTF':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DOT':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,18,22,23,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,61,62,63,69,72,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,108,109,110,111,112,113,114,115,117,118,122,123,124,126,129,130,132,136,137,140,141,142,143,144,145,146,148,149,151,153,154,155,156,158,160,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,],[31,31,31,31,31,-13,-14,-15,31,31,-21,31,31,31,-41,-59,-60,31,79,31,-42,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,79,31,31,31,31,31,31,31,31,31,31,31,31,-67,31,31,-69,-43,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-65,-70,31,-58,31,31,-20,31,31,31,31,31,31,31,31,31,-57,-62,31,-68,-66,31,31,31,31,31,-72,31,31,31,31,31,31,31,-54,-61,31,-63,-73,-74,31,31,31,31,31,31,31,31,31,-71,31,31,31,31,31,31,31,31,31,31,31,31,]),'$end':([1,2,7,8,9,12,18,22,23,61,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,149,153,154,155,156,160,162,163,168,171,175,178,179,180,182,185,187,],[0,-12,-13,-14,-15,-21,-41,-59,-60,-22,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-40,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,-26,-19,-38,-46,-4,-1,]),'LESS_THEN':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[32,-13,-14,-15,-21,-41,-59,-60,32,32,32,32,32,-22,32,-29,-67,32,-69,32,-6,-7,-8,-9,32,32,32,32,32,32,32,32,32,32,-48,-49,-50,-51,32,-65,-70,-58,-20,32,32,-57,-62,-68,-66,32,32,32,32,-72,32,32,32,32,32,32,-54,-61,-63,-73,-74,32,32,32,-71,32,32,32,32,32,32,32,32,32,]),'GREATER_THEN':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[33,-13,-14,-15,-21,-41,-59,-60,33,33,33,33,33,-22,33,-29,-67,33,-69,33,-6,-7,-8,-9,33,33,33,33,33,33,33,33,33,33,-48,-49,-50,-51,33,-65,-70,-58,-20,33,33,-57,-62,-68,-66,33,33,33,33,-72,33,33,33,33,33,33,-54,-61,-63,-73,-74,33,33,33,-71,33,33,33,33,33,33,33,33,33,]),'LESS_EQUALS':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[34,-13,-14,-15,-21,-41,-59,-60,34,34,34,34,34,-22,34,-29,-67,34,-69,34,-6,-7,-8,-9,34,34,34,34,34,34,34,34,34,34,-48,-49,-50,-51,34,-65,-70,-58,-20,34,34,-57,-62,-68,-66,34,34,34,34,-72,34,34,34,34,34,34,-54,-61,-63,-73,-74,34,34,34,-71,34,34,34,34,34,34,34,34,34,]),'GREATER_EQUALS':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[35,-13,-14,-15,-21,-41,-59,-60,35,35,35,35,35,-22,35,-29,-67,35,-69,35,-6,-7,-8,-9,35,35,35,35,35,35,35,35,35,35,-48,-49,-50,-51,35,-65,-70,-58,-20,35,35,-57,-62,-68,-66,35,35,35,35,-72,35,35,35,35,35,35,-54,-61,-63,-73,-74,35,35,35,-71,35,35,35,35,35,35,35,35,35,]),'EQUALS':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[36,-13,-14,-15,-21,-41,-59,-60,36,36,36,36,36,-22,36,-29,-67,36,-69,36,-6,-7,-8,-9,-10,-11,36,36,36,36,36,36,36,36,-48,-49,-50,-51,36,-65,-70,-58,-20,36,36,-57,-62,-68,-66,36,36,36,36,-72,36,36,36,36,36,36,-54,-61,-63,-73,-74,36,36,36,-71,36,36,36,36,36,36,36,36,36,]),'NOT_EQUALS':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[37,-13,-14,-15,-21,-41,-59,-60,37,37,37,37,37,-22,37,-29,-67,37,-69,37,-6,-7,-8,-9,-10,-11,37,37,37,37,37,37,37,37,-48,-49,-50,-51,37,-65,-70,-58,-20,37,37,-57,-62,-68,-66,37,37,37,37,-72,37,37,37,37,37,37,-54,-61,-63,-73,-74,37,37,37,-71,37,37,37,37,37,37,37,37,37,]),'AND':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[38,-13,-14,-15,-21,-41,-59,-60,38,38,38,38,38,-22,38,-29,-67,38,-69,38,-6,-7,-8,-9,-10,-11,-30,-31,38,38,-34,-35,-36,-37,-48,-49,-50,-51,38,-65,-70,-58,-20,38,38,-57,-62,-68,-66,38,38,38,38,-72,38,38,38,38,38,38,-54,-61,-63,-73,-74,38,38,38,-71,38,38,38,38,38,38,38,38,38,]),'NAND':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[39,-13,-14,-15,-21,-41,-59,-60,39,39,39,39,39,-22,39,-29,-67,39,-69,39,-6,-7,-8,-9,-10,-11,-30,-31,39,39,-34,-35,-36,-37,-48,-49,-50,-51,39,-65,-70,-58,-20,39,39,-57,-62,-68,-66,39,39,39,39,-72,39,39,39,39,39,39,-54,-61,-63,-73,-74,39,39,39,-71,39,39,39,39,39,39,39,39,39,]),'OR':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[40,-13,-14,-15,-21,-41,-59,-60,40,40,40,40,40,-22,40,-29,-67,40,-69,40,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,40,-65,-70,-58,-20,40,40,-57,-62,-68,-66,40,40,40,40,-72,40,40,40,40,40,40,-54,-61,-63,-73,-74,40,40,40,-71,40,40,40,40,40,40,40,40,40,]),'NOR':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[41,-13,-14,-15,-21,-41,-59,-60,41,41,41,41,41,-22,41,-29,-67,41,-69,41,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,41,-65,-70,-58,-20,41,41,-57,-62,-68,-66,41,41,41,41,-72,41,41,41,41,41,41,-54,-61,-63,-73,-74,41,41,41,-71,41,41,41,41,41,41,41,41,41,]),'XOR':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[42,-13,-14,-15,-21,-41,-59,-60,42,42,42,42,42,-22,42,-29,-67,42,-69,42,-6,-7,-8,-9,-10,-11,42,42,42,42,-34,-35,-36,-37,-48,-49,-50,-51,42,-65,-70,-58,-20,42,42,-57,-62,-68,-66,42,42,42,42,-72,42,42,42,42,42,42,-54,-61,-63,-73,-74,42,42,42,-71,42,42,42,42,42,42,42,42,42,]),'EQ':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[43,-13,-14,-15,-21,-41,-59,-60,43,43,43,43,43,-22,43,-29,-67,43,-69,43,-6,-7,-8,-9,-10,-11,43,43,43,43,-34,-35,-36,-37,-48,-49,-50,-51,43,-65,-70,-58,-20,43,43,-57,-62,-68,-66,43,43,43,43,-72,43,43,43,43,43,43,-54,-61,-63,-73,-74,43,43,43,-71,43,43,43,43,43,43,43,43,43,]),'NEQ':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[44,-13,-14,-15,-21,-41,-59,-60,44,44,44,44,44,-22,44,-29,-67,44,-69,44,-6,-7,-8,-9,-10,-11,44,44,44,44,-34,-35,-36,-37,-48,-49,-50,-51,44,-65,-70,-58,-20,44,44,-57,-62,-68,-66,44,44,44,44,-72,44,44,44,44,44,44,-54,-61,-63,-73,-74,44,44,44,-71,44,44,44,44,44,44,44,44,44,]),'IMPL':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[45,-13,-14,-15,-21,-41,-59,-60,45,45,45,45,45,-22,45,-29,-67,45,-69,45,-6,-7,-8,-9,-10,-11,45,45,45,45,-34,-35,-36,-37,-48,-49,-50,-51,45,-65,-70,-58,-20,45,45,-57,-62,-68,-66,45,45,45,45,-72,45,45,45,45,45,45,-54,-61,-63,-73,-74,45,45,45,-71,45,45,45,45,45,45,45,45,45,]),'PLUS':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[46,-13,-14,-15,-21,-41,-59,-60,46,46,46,46,46,-22,46,-29,-67,46,-69,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-48,-49,-50,-51,46,-65,-70,-58,-20,46,46,-57,-62,-68,-66,46,46,46,46,-72,46,46,46,46,46,46,-54,-61,-63,-73,-74,46,46,46,-71,46,46,46,46,46,46,46,46,46,]),'TIMES':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[48,-13,-14,-15,-21,-41,-59,-60,48,48,48,48,48,-22,48,-29,-67,48,-69,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-50,-51,48,-65,-70,-58,-20,48,48,-57,-62,-68,-66,48,48,48,48,-72,48,48,48,48,48,48,-54,-61,-63,-73,-74,48,48,48,-71,48,48,48,48,48,48,48,48,48,]),'DIVIDE':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,137,141,142,143,144,145,146,148,149,153,154,155,156,160,162,163,168,171,174,175,176,178,179,180,181,182,185,186,187,],[49,-13,-14,-15,-21,-41,-59,-60,49,49,49,49,49,-22,49,-29,-67,49,-69,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-50,-51,49,-65,-70,-58,-20,49,49,-57,-62,-68,-66,49,49,49,49,-72,49,49,49,49,49,49,-54,-61,-63,-73,-74,49,49,49,-71,49,49,49,49,49,49,49,49,49,]),'ASSIGN':([2,7,8,9,12,18,22,23,53,55,56,57,59,61,62,63,65,75,76,78,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,128,129,132,136,137,141,142,143,144,145,146,147,148,149,153,154,155,156,160,162,163,168,171,173,174,175,176,178,179,180,181,182,185,186,187,],[50,-13,-14,-15,-21,-41,-59,-60,50,50,50,50,50,-22,50,-29,117,-67,50,-69,50,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,50,-65,-70,-58,-20,50,50,-57,158,-62,-68,-66,50,50,50,50,-72,50,50,170,50,50,50,50,-54,-61,-63,-73,-74,50,50,183,50,-71,50,50,50,50,50,50,50,50,50,]),'SEPARATOR':([7,8,9,12,18,22,23,53,58,59,61,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,127,129,132,136,137,141,142,143,144,145,146,149,153,154,155,156,160,161,162,163,168,171,174,175,178,179,180,182,185,186,187,],[-13,-14,-15,-21,-41,-59,-60,105,112,-27,-22,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,157,-62,-68,-66,164,-5,-18,-28,-72,-23,-39,-40,-45,-53,-54,-61,-63,157,-73,-74,-47,-44,-55,-71,-26,-19,-38,-46,-4,-56,-1,]),'RPAREN':([7,8,9,12,18,22,23,52,54,55,61,63,67,68,72,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,111,121,122,125,126,129,131,132,134,135,136,141,142,144,145,146,149,150,153,154,155,156,159,160,162,163,168,171,175,178,179,180,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,104,107,108,-22,-29,-16,120,126,-67,-24,132,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,136,-70,138,-58,-20,152,-64,155,-57,-62,160,-68,162,163,-66,-5,-18,-72,-23,-39,-40,-17,-45,-53,-54,-61,-25,-63,-73,-74,-47,-44,-71,-26,-19,-38,-46,-4,-1,]),'DO':([7,8,9,12,18,22,23,56,57,61,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,149,153,154,155,156,160,162,163,168,171,175,176,178,179,180,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,109,110,-22,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-40,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,184,-26,-19,-38,-46,-4,-1,]),'END':([7,8,9,12,18,22,23,58,59,61,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,127,129,132,136,141,142,143,144,145,146,149,153,154,155,156,160,161,162,163,168,171,174,175,178,179,180,182,185,186,187,],[-13,-14,-15,-21,-41,-59,-60,111,-27,-22,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,156,-62,-68,-66,-5,-18,-28,-72,-23,-39,-40,-45,-53,-54,-61,-63,175,-73,-74,-47,-44,-55,-71,-26,-19,-38,-46,-4,-56,-1,]),'THEN':([7,8,9,12,18,22,23,61,62,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,149,153,154,155,156,160,162,163,168,171,175,178,179,180,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,-22,114,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-40,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,-26,-19,-38,-46,-4,-1,]),'COMMA':([7,8,9,12,18,22,23,61,63,64,67,71,75,76,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,148,149,153,154,155,156,160,162,163,168,171,175,178,179,180,181,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,-22,-29,116,119,116,-67,130,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-2,-40,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,-26,-19,-38,-3,-46,-4,-1,]),'RBRACKET':([7,8,9,12,18,22,23,25,61,63,74,75,76,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,113,122,126,129,132,136,141,142,144,145,146,149,153,154,155,156,159,160,162,163,168,171,175,178,179,180,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,75,-22,-29,129,-67,-24,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,144,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-40,-45,-53,-54,-61,-25,-63,-73,-74,-47,-44,-71,-26,-19,-38,-46,-4,-1,]),'ELSE':([7,8,9,12,18,22,23,61,63,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,149,153,154,155,156,160,162,163,168,171,175,178,179,180,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,-22,-29,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,169,-39,-40,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,-26,-19,-38,-46,-4,-1,]),'IN':([7,8,9,12,18,22,23,61,63,64,66,67,71,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,108,111,122,126,129,132,136,141,142,144,145,146,148,149,150,153,154,155,156,160,162,163,168,171,175,178,179,180,181,182,185,187,],[-13,-14,-15,-21,-41,-59,-60,-22,-29,115,118,-16,124,-67,-69,-6,-7,-8,-9,-10,-11,-30,-31,-32,-33,-34,-35,-36,-37,-48,-49,-50,-51,-52,-65,-70,-58,-20,-64,-57,-62,-68,-66,-5,-18,-72,-23,-39,-2,-40,-17,-45,-53,-54,-61,-63,-73,-74,-47,-44,-71,-26,-19,-38,-3,-46,-4,-1,]),'ARROW':([19,67,70,107,120,138,139,150,152,165,],[69,-16,123,140,151,166,167,-17,172,177,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,60,69,72,77,82,105,109,110,112,114,115,117,118,123,124,130,140,151,158,164,166,167,169,170,172,177,183,184,],[2,53,55,56,57,59,61,62,63,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,76,113,122,76,76,76,137,141,142,143,145,146,148,149,153,154,76,168,171,174,176,178,179,180,181,182,185,186,187,]),'dots':([0,2,3,5,6,10,11,13,14,15,25,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,56,57,59,60,61,62,63,69,72,76,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,105,109,110,112,113,114,115,117,118,122,123,124,130,137,140,141,142,143,145,146,148,149,151,153,154,158,164,166,167,168,169,170,171,172,174,176,177,178,179,180,181,182,183,184,185,186,187,],[27,51,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,51,51,51,51,51,27,51,51,51,27,27,51,27,51,27,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,27,27,27,27,51,27,27,27,27,51,27,27,27,51,27,51,51,51,51,51,51,51,27,51,51,27,27,27,27,51,27,27,51,27,51,51,27,51,51,51,51,51,27,27,51,51,51,]),'body':([11,],[58,]),'assign_list':([16,20,],[64,71,]),'identifier_list':([17,19,54,68,107,119,138,],[66,70,106,121,139,150,165,]),'expression_list':([25,52,72,77,82,130,],[74,103,125,131,135,159,]),'struct_body':([73,133,],[127,161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('assign_list -> IDENTIFIER ASSIGN expression','assign_list',3,'p_assign_list','local_expr.py',10),
  ('assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression','assign_list',5,'p_assign_list','local_expr.py',11),
  ('expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression','expression',7,'p_expression_nm_proc','proc_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('program -> expression','program',1,'p_program','program_expr.py',11),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','lock_expr.py',14),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_identifier_list','lock_expr.py',15),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> PROC LPAREN RPAREN identifier_list ARROW expression','expression',6,'p_expression_0m_proc','proc_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequence_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lambda_expr.py',16),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lambda_expr.py',17),
  ('expression -> PROC LPAREN identifier_list RPAREN ARROW expression','expression',6,'p_expression_n0_proc','proc_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequence_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequence_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> LOCAL assign_list IN expression','expression',4,'p_expression_local','local_expr.py',19),
  ('expression -> LOCK identifier_list IN expression','expression',4,'p_expression_lock','lock_expr.py',19),
  ('expression -> STRING','expression',1,'p_expression_string_value','datatypes.py',20),
  ('dots -> DOT','dots',1,'p_dots','struct_expr.py',20),
  ('dots -> dots DOT','dots',2,'p_dots','struct_expr.py',21),
  ('expression -> LAMBDA LPAREN RPAREN ARROW expression','expression',5,'p_expression_n_lambda','lambda_expr.py',21),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',22),
  ('expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression','expression',6,'p_expression_n_lambda','lambda_expr.py',23),
  ('expression -> PROC LPAREN RPAREN ARROW expression','expression',5,'p_expression_00_proc','proc_expr.py',22),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',23),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',24),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',25),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',26),
  ('expression -> expression ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',23),
  ('expression -> LOCALREC assign_list IN expression','expression',4,'p_expression_localrec','local_expr.py',24),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list_non_empty','datatypes.py',25),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',25),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',26),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',29),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',30),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array_non_empty','datatypes.py',33),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array_non_empty','datatypes.py',34),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',33),
  ('expression -> expression dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',34),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',37),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',38),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',39),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',38),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',41),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',42),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',43),
  ('expression -> SIZE LPAREN IDENTIFIER RPAREN','expression',4,'p_size_expression','datatypes.py',47),
  ('expression -> PRINTF LPAREN expression_list RPAREN','expression',4,'p_libc_call_expression','datatypes.py',52),
]
