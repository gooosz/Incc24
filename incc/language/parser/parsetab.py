
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE LPAREN MINUS NUMBER PLUS RPAREN TIMESprogram : expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression TIMES expressionexpression : expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : NUMBERexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,],[3,7,3,-7,3,3,3,3,3,-6,7,-2,-3,-4,-5,-8,]),'NUMBER':([0,3,5,6,7,8,9,],[4,4,4,4,4,4,4,]),'LPAREN':([0,3,5,6,7,8,9,],[5,5,5,5,5,5,5,]),'$end':([1,2,4,10,12,13,14,15,16,],[0,-1,-7,-6,-2,-3,-4,-5,-8,]),'PLUS':([2,4,10,11,12,13,14,15,16,],[6,-7,-6,6,-2,-3,-4,-5,-8,]),'TIMES':([2,4,10,11,12,13,14,15,16,],[8,-7,-6,8,8,8,-4,-5,-8,]),'DIVIDE':([2,4,10,11,12,13,14,15,16,],[9,-7,-6,9,9,9,-4,-5,-8,]),'RPAREN':([4,10,11,12,13,14,15,16,],[-7,-6,16,-2,-3,-4,-5,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,3,5,6,7,8,9,],[2,10,11,12,13,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression','program',1,'p_program','arith_expr.py',16),
  ('expression -> expression PLUS expression','expression',3,'p_expr_plus','arith_expr.py',21),
  ('expression -> expression MINUS expression','expression',3,'p_expr_minus','arith_expr.py',26),
  ('expression -> expression TIMES expression','expression',3,'p_expr_times','arith_expr.py',31),
  ('expression -> expression DIVIDE expression','expression',3,'p_expr_div','arith_expr.py',36),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','arith_expr.py',41),
  ('expression -> NUMBER','expression',1,'p_expr_num','arith_expr.py',46),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_paren_expr','arith_expr.py',51),
]
