Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression
Rule 2     assign_list -> IDENTIFIER ASSIGN expression
Rule 3     assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression
Rule 4     expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
Rule 5     expression -> WHILE expression DO expression
Rule 6     expression -> expression LESS_THEN expression
Rule 7     expression -> expression GREATER_THEN expression
Rule 8     expression -> expression LESS_EQUALS expression
Rule 9     expression -> expression GREATER_EQUALS expression
Rule 10    expression -> expression EQUALS expression
Rule 11    expression -> expression NOT_EQUALS expression
Rule 12    program -> expression
Rule 13    expression -> NUMBER
Rule 14    expression -> FLOAT
Rule 15    expression -> CHAR
Rule 16    identifier_list -> IDENTIFIER
Rule 17    identifier_list -> IDENTIFIER COMMA identifier_list
Rule 18    expression -> LOOP expression DO expression
Rule 19    expression -> PROC LPAREN RPAREN identifier_list ARROW expression
Rule 20    expression -> BEGIN body END
Rule 21    expression -> IDENTIFIER
Rule 22    expression -> NOT expression
Rule 23    expression -> IF expression THEN expression
Rule 24    expression_list -> expression
Rule 25    expression_list -> expression COMMA expression_list
Rule 26    expression -> PROC LPAREN identifier_list RPAREN ARROW expression
Rule 27    body -> expression
Rule 28    body -> body SEPARATOR expression
Rule 29    expression -> MINUS expression
Rule 30    expression -> expression AND expression
Rule 31    expression -> expression NAND expression
Rule 32    expression -> expression OR expression
Rule 33    expression -> expression NOR expression
Rule 34    expression -> expression XOR expression
Rule 35    expression -> expression EQ expression
Rule 36    expression -> expression NEQ expression
Rule 37    expression -> expression IMPL expression
Rule 38    expression -> IF expression THEN expression ELSE expression
Rule 39    expression -> LOCAL assign_list IN expression
Rule 40    expression -> LOCK identifier_list IN expression
Rule 41    expression -> STRING
Rule 42    dots -> DOT
Rule 43    dots -> dots DOT
Rule 44    expression -> LAMBDA LPAREN RPAREN ARROW expression
Rule 45    expression -> LAMBDA identifier_list ARROW expression
Rule 46    expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression
Rule 47    expression -> PROC LPAREN RPAREN ARROW expression
Rule 48    expression -> expression PLUS expression
Rule 49    expression -> expression MINUS expression
Rule 50    expression -> expression TIMES expression
Rule 51    expression -> expression DIVIDE expression
Rule 52    expression -> expression ASSIGN expression
Rule 53    expression -> LIST LPAREN expression_list RPAREN
Rule 54    expression -> LOCALREC assign_list IN expression
Rule 55    struct_body -> IDENTIFIER ASSIGN expression
Rule 56    struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression
Rule 57    expression -> LIST LPAREN RPAREN
Rule 58    expression -> LPAREN expression RPAREN
Rule 59    expression -> TRUE
Rule 60    expression -> FALSE
Rule 61    expression -> STRUCT BEGIN struct_body END
Rule 62    expression -> LBRACKET expression_list RBRACKET
Rule 63    expression -> ARRAY LPAREN expression_list RPAREN
Rule 64    expression -> LAMBDA ARROW expression
Rule 65    expression -> expression dots IDENTIFIER
Rule 66    expression -> LBRACKET RBRACKET
Rule 67    expression -> ARRAY LPAREN RPAREN
Rule 68    expression -> expression LPAREN expression_list RPAREN
Rule 69    expression -> dots IDENTIFIER
Rule 70    expression -> expression LPAREN RPAREN
Rule 71    expression -> IDENTIFIER LBRACKET expression RBRACKET
Rule 72    expression -> EXTEND expression BEGIN struct_body END
Rule 73    expression -> SIZE LPAREN IDENTIFIER RPAREN

Terminals, with rules where they appear

AND                  : 30
ARRAY                : 63 67
ARROW                : 4 19 26 44 45 46 47 64
ASSIGN               : 2 3 52 55 56
BEGIN                : 20 61 72
CHAR                 : 15
COMMA                : 3 17 25
DIVIDE               : 51
DO                   : 1 5 18
DOT                  : 42 43
ELSE                 : 38
END                  : 20 61 72
EQ                   : 35
EQUALS               : 10
EXTEND               : 72
FALSE                : 60
FLOAT                : 14
FOR                  : 1
GREATER_EQUALS       : 9
GREATER_THEN         : 7
IDENTIFIER           : 2 3 16 17 21 55 56 65 69 71 73
IF                   : 23 38
IMPL                 : 37
IN                   : 39 40 54
LAMBDA               : 44 45 46 64
LBRACKET             : 62 66 71
LESS_EQUALS          : 8
LESS_THEN            : 6
LIST                 : 53 57
LOCAL                : 39
LOCALREC             : 54
LOCK                 : 40
LOOP                 : 18
LPAREN               : 4 19 26 44 46 47 53 57 58 63 67 68 70 73
MINUS                : 29 49
NAND                 : 31
NEQ                  : 36
NOR                  : 33
NOT                  : 22
NOT_EQUALS           : 11
NUMBER               : 13
OR                   : 32
PLUS                 : 48
PROC                 : 4 19 26 47
RBRACKET             : 62 66 71
RPAREN               : 4 19 26 44 46 47 53 57 58 63 67 68 70 73
SEPARATOR            : 1 1 28 56
SIZE                 : 73
STRING               : 41
STRUCT               : 61
THEN                 : 23 38
TIMES                : 50
TRUE                 : 59
WHILE                : 5
XOR                  : 34
error                : 

Nonterminals, with rules where they appear

assign_list          : 3 39 54
body                 : 20 28
dots                 : 43 65 69
expression           : 1 1 1 1 2 3 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 18 18 19 22 23 23 24 25 26 27 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 38 39 40 44 45 46 47 48 48 49 49 50 50 51 51 52 52 54 55 56 58 64 65 68 70 71 72
expression_list      : 25 53 62 63 68
identifier_list      : 4 4 17 19 26 40 45 46
program              : 0
struct_body          : 56 61 72

Parsing method: LALR

state 0

    (0) S' -> . program
    (12) program -> . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    program                        shift and go to state 1
    expression                     shift and go to state 2
    dots                           shift and go to state 27

state 1

    (0) S' -> program .



state 2

    (12) program -> expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 12 (program -> expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 3

    (1) expression -> FOR . expression SEPARATOR expression SEPARATOR expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 52
    dots                           shift and go to state 27

state 4

    (4) expression -> PROC . LPAREN identifier_list RPAREN identifier_list ARROW expression
    (19) expression -> PROC . LPAREN RPAREN identifier_list ARROW expression
    (26) expression -> PROC . LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> PROC . LPAREN RPAREN ARROW expression

    LPAREN          shift and go to state 53


state 5

    (58) expression -> LPAREN . expression RPAREN
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 54
    dots                           shift and go to state 27

state 6

    (5) expression -> WHILE . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 55
    dots                           shift and go to state 27

state 7

    (13) expression -> NUMBER .

    LESS_THEN       reduce using rule 13 (expression -> NUMBER .)
    GREATER_THEN    reduce using rule 13 (expression -> NUMBER .)
    LESS_EQUALS     reduce using rule 13 (expression -> NUMBER .)
    GREATER_EQUALS  reduce using rule 13 (expression -> NUMBER .)
    EQUALS          reduce using rule 13 (expression -> NUMBER .)
    NOT_EQUALS      reduce using rule 13 (expression -> NUMBER .)
    AND             reduce using rule 13 (expression -> NUMBER .)
    NAND            reduce using rule 13 (expression -> NUMBER .)
    OR              reduce using rule 13 (expression -> NUMBER .)
    NOR             reduce using rule 13 (expression -> NUMBER .)
    XOR             reduce using rule 13 (expression -> NUMBER .)
    EQ              reduce using rule 13 (expression -> NUMBER .)
    NEQ             reduce using rule 13 (expression -> NUMBER .)
    IMPL            reduce using rule 13 (expression -> NUMBER .)
    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    ASSIGN          reduce using rule 13 (expression -> NUMBER .)
    LPAREN          reduce using rule 13 (expression -> NUMBER .)
    DOT             reduce using rule 13 (expression -> NUMBER .)
    $end            reduce using rule 13 (expression -> NUMBER .)
    SEPARATOR       reduce using rule 13 (expression -> NUMBER .)
    RPAREN          reduce using rule 13 (expression -> NUMBER .)
    DO              reduce using rule 13 (expression -> NUMBER .)
    END             reduce using rule 13 (expression -> NUMBER .)
    THEN            reduce using rule 13 (expression -> NUMBER .)
    COMMA           reduce using rule 13 (expression -> NUMBER .)
    RBRACKET        reduce using rule 13 (expression -> NUMBER .)
    BEGIN           reduce using rule 13 (expression -> NUMBER .)
    ELSE            reduce using rule 13 (expression -> NUMBER .)
    IN              reduce using rule 13 (expression -> NUMBER .)


state 8

    (14) expression -> FLOAT .

    LESS_THEN       reduce using rule 14 (expression -> FLOAT .)
    GREATER_THEN    reduce using rule 14 (expression -> FLOAT .)
    LESS_EQUALS     reduce using rule 14 (expression -> FLOAT .)
    GREATER_EQUALS  reduce using rule 14 (expression -> FLOAT .)
    EQUALS          reduce using rule 14 (expression -> FLOAT .)
    NOT_EQUALS      reduce using rule 14 (expression -> FLOAT .)
    AND             reduce using rule 14 (expression -> FLOAT .)
    NAND            reduce using rule 14 (expression -> FLOAT .)
    OR              reduce using rule 14 (expression -> FLOAT .)
    NOR             reduce using rule 14 (expression -> FLOAT .)
    XOR             reduce using rule 14 (expression -> FLOAT .)
    EQ              reduce using rule 14 (expression -> FLOAT .)
    NEQ             reduce using rule 14 (expression -> FLOAT .)
    IMPL            reduce using rule 14 (expression -> FLOAT .)
    PLUS            reduce using rule 14 (expression -> FLOAT .)
    MINUS           reduce using rule 14 (expression -> FLOAT .)
    TIMES           reduce using rule 14 (expression -> FLOAT .)
    DIVIDE          reduce using rule 14 (expression -> FLOAT .)
    ASSIGN          reduce using rule 14 (expression -> FLOAT .)
    LPAREN          reduce using rule 14 (expression -> FLOAT .)
    DOT             reduce using rule 14 (expression -> FLOAT .)
    $end            reduce using rule 14 (expression -> FLOAT .)
    SEPARATOR       reduce using rule 14 (expression -> FLOAT .)
    RPAREN          reduce using rule 14 (expression -> FLOAT .)
    DO              reduce using rule 14 (expression -> FLOAT .)
    END             reduce using rule 14 (expression -> FLOAT .)
    THEN            reduce using rule 14 (expression -> FLOAT .)
    COMMA           reduce using rule 14 (expression -> FLOAT .)
    RBRACKET        reduce using rule 14 (expression -> FLOAT .)
    BEGIN           reduce using rule 14 (expression -> FLOAT .)
    ELSE            reduce using rule 14 (expression -> FLOAT .)
    IN              reduce using rule 14 (expression -> FLOAT .)


state 9

    (15) expression -> CHAR .

    LESS_THEN       reduce using rule 15 (expression -> CHAR .)
    GREATER_THEN    reduce using rule 15 (expression -> CHAR .)
    LESS_EQUALS     reduce using rule 15 (expression -> CHAR .)
    GREATER_EQUALS  reduce using rule 15 (expression -> CHAR .)
    EQUALS          reduce using rule 15 (expression -> CHAR .)
    NOT_EQUALS      reduce using rule 15 (expression -> CHAR .)
    AND             reduce using rule 15 (expression -> CHAR .)
    NAND            reduce using rule 15 (expression -> CHAR .)
    OR              reduce using rule 15 (expression -> CHAR .)
    NOR             reduce using rule 15 (expression -> CHAR .)
    XOR             reduce using rule 15 (expression -> CHAR .)
    EQ              reduce using rule 15 (expression -> CHAR .)
    NEQ             reduce using rule 15 (expression -> CHAR .)
    IMPL            reduce using rule 15 (expression -> CHAR .)
    PLUS            reduce using rule 15 (expression -> CHAR .)
    MINUS           reduce using rule 15 (expression -> CHAR .)
    TIMES           reduce using rule 15 (expression -> CHAR .)
    DIVIDE          reduce using rule 15 (expression -> CHAR .)
    ASSIGN          reduce using rule 15 (expression -> CHAR .)
    LPAREN          reduce using rule 15 (expression -> CHAR .)
    DOT             reduce using rule 15 (expression -> CHAR .)
    $end            reduce using rule 15 (expression -> CHAR .)
    SEPARATOR       reduce using rule 15 (expression -> CHAR .)
    RPAREN          reduce using rule 15 (expression -> CHAR .)
    DO              reduce using rule 15 (expression -> CHAR .)
    END             reduce using rule 15 (expression -> CHAR .)
    THEN            reduce using rule 15 (expression -> CHAR .)
    COMMA           reduce using rule 15 (expression -> CHAR .)
    RBRACKET        reduce using rule 15 (expression -> CHAR .)
    BEGIN           reduce using rule 15 (expression -> CHAR .)
    ELSE            reduce using rule 15 (expression -> CHAR .)
    IN              reduce using rule 15 (expression -> CHAR .)


state 10

    (18) expression -> LOOP . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 56
    dots                           shift and go to state 27

state 11

    (20) expression -> BEGIN . body END
    (27) body -> . expression
    (28) body -> . body SEPARATOR expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    body                           shift and go to state 57
    expression                     shift and go to state 58
    dots                           shift and go to state 27

state 12

    (21) expression -> IDENTIFIER .
    (71) expression -> IDENTIFIER . LBRACKET expression RBRACKET

    LESS_THEN       reduce using rule 21 (expression -> IDENTIFIER .)
    GREATER_THEN    reduce using rule 21 (expression -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 21 (expression -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 21 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 21 (expression -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 21 (expression -> IDENTIFIER .)
    AND             reduce using rule 21 (expression -> IDENTIFIER .)
    NAND            reduce using rule 21 (expression -> IDENTIFIER .)
    OR              reduce using rule 21 (expression -> IDENTIFIER .)
    NOR             reduce using rule 21 (expression -> IDENTIFIER .)
    XOR             reduce using rule 21 (expression -> IDENTIFIER .)
    EQ              reduce using rule 21 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 21 (expression -> IDENTIFIER .)
    IMPL            reduce using rule 21 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 21 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 21 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 21 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 21 (expression -> IDENTIFIER .)
    ASSIGN          reduce using rule 21 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 21 (expression -> IDENTIFIER .)
    DOT             reduce using rule 21 (expression -> IDENTIFIER .)
    $end            reduce using rule 21 (expression -> IDENTIFIER .)
    SEPARATOR       reduce using rule 21 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER .)
    DO              reduce using rule 21 (expression -> IDENTIFIER .)
    END             reduce using rule 21 (expression -> IDENTIFIER .)
    THEN            reduce using rule 21 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 21 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 21 (expression -> IDENTIFIER .)
    BEGIN           reduce using rule 21 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 21 (expression -> IDENTIFIER .)
    IN              reduce using rule 21 (expression -> IDENTIFIER .)
    LBRACKET        shift and go to state 59


state 13

    (22) expression -> NOT . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 60
    dots                           shift and go to state 27

state 14

    (23) expression -> IF . expression THEN expression
    (38) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 61
    dots                           shift and go to state 27

state 15

    (29) expression -> MINUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 62
    dots                           shift and go to state 27

state 16

    (39) expression -> LOCAL . assign_list IN expression
    (2) assign_list -> . IDENTIFIER ASSIGN expression
    (3) assign_list -> . assign_list COMMA IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 64

    assign_list                    shift and go to state 63

state 17

    (40) expression -> LOCK . identifier_list IN expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 65

state 18

    (41) expression -> STRING .

    LESS_THEN       reduce using rule 41 (expression -> STRING .)
    GREATER_THEN    reduce using rule 41 (expression -> STRING .)
    LESS_EQUALS     reduce using rule 41 (expression -> STRING .)
    GREATER_EQUALS  reduce using rule 41 (expression -> STRING .)
    EQUALS          reduce using rule 41 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 41 (expression -> STRING .)
    AND             reduce using rule 41 (expression -> STRING .)
    NAND            reduce using rule 41 (expression -> STRING .)
    OR              reduce using rule 41 (expression -> STRING .)
    NOR             reduce using rule 41 (expression -> STRING .)
    XOR             reduce using rule 41 (expression -> STRING .)
    EQ              reduce using rule 41 (expression -> STRING .)
    NEQ             reduce using rule 41 (expression -> STRING .)
    IMPL            reduce using rule 41 (expression -> STRING .)
    PLUS            reduce using rule 41 (expression -> STRING .)
    MINUS           reduce using rule 41 (expression -> STRING .)
    TIMES           reduce using rule 41 (expression -> STRING .)
    DIVIDE          reduce using rule 41 (expression -> STRING .)
    ASSIGN          reduce using rule 41 (expression -> STRING .)
    LPAREN          reduce using rule 41 (expression -> STRING .)
    DOT             reduce using rule 41 (expression -> STRING .)
    $end            reduce using rule 41 (expression -> STRING .)
    SEPARATOR       reduce using rule 41 (expression -> STRING .)
    RPAREN          reduce using rule 41 (expression -> STRING .)
    DO              reduce using rule 41 (expression -> STRING .)
    END             reduce using rule 41 (expression -> STRING .)
    THEN            reduce using rule 41 (expression -> STRING .)
    COMMA           reduce using rule 41 (expression -> STRING .)
    RBRACKET        reduce using rule 41 (expression -> STRING .)
    BEGIN           reduce using rule 41 (expression -> STRING .)
    ELSE            reduce using rule 41 (expression -> STRING .)
    IN              reduce using rule 41 (expression -> STRING .)


state 19

    (44) expression -> LAMBDA . LPAREN RPAREN ARROW expression
    (45) expression -> LAMBDA . identifier_list ARROW expression
    (46) expression -> LAMBDA . LPAREN identifier_list RPAREN ARROW expression
    (64) expression -> LAMBDA . ARROW expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    LPAREN          shift and go to state 67
    ARROW           shift and go to state 68
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 69

state 20

    (53) expression -> LIST . LPAREN expression_list RPAREN
    (57) expression -> LIST . LPAREN RPAREN

    LPAREN          shift and go to state 70


state 21

    (54) expression -> LOCALREC . assign_list IN expression
    (2) assign_list -> . IDENTIFIER ASSIGN expression
    (3) assign_list -> . assign_list COMMA IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 64

    assign_list                    shift and go to state 71

state 22

    (59) expression -> TRUE .

    LESS_THEN       reduce using rule 59 (expression -> TRUE .)
    GREATER_THEN    reduce using rule 59 (expression -> TRUE .)
    LESS_EQUALS     reduce using rule 59 (expression -> TRUE .)
    GREATER_EQUALS  reduce using rule 59 (expression -> TRUE .)
    EQUALS          reduce using rule 59 (expression -> TRUE .)
    NOT_EQUALS      reduce using rule 59 (expression -> TRUE .)
    AND             reduce using rule 59 (expression -> TRUE .)
    NAND            reduce using rule 59 (expression -> TRUE .)
    OR              reduce using rule 59 (expression -> TRUE .)
    NOR             reduce using rule 59 (expression -> TRUE .)
    XOR             reduce using rule 59 (expression -> TRUE .)
    EQ              reduce using rule 59 (expression -> TRUE .)
    NEQ             reduce using rule 59 (expression -> TRUE .)
    IMPL            reduce using rule 59 (expression -> TRUE .)
    PLUS            reduce using rule 59 (expression -> TRUE .)
    MINUS           reduce using rule 59 (expression -> TRUE .)
    TIMES           reduce using rule 59 (expression -> TRUE .)
    DIVIDE          reduce using rule 59 (expression -> TRUE .)
    ASSIGN          reduce using rule 59 (expression -> TRUE .)
    LPAREN          reduce using rule 59 (expression -> TRUE .)
    DOT             reduce using rule 59 (expression -> TRUE .)
    $end            reduce using rule 59 (expression -> TRUE .)
    SEPARATOR       reduce using rule 59 (expression -> TRUE .)
    RPAREN          reduce using rule 59 (expression -> TRUE .)
    DO              reduce using rule 59 (expression -> TRUE .)
    END             reduce using rule 59 (expression -> TRUE .)
    THEN            reduce using rule 59 (expression -> TRUE .)
    COMMA           reduce using rule 59 (expression -> TRUE .)
    RBRACKET        reduce using rule 59 (expression -> TRUE .)
    BEGIN           reduce using rule 59 (expression -> TRUE .)
    ELSE            reduce using rule 59 (expression -> TRUE .)
    IN              reduce using rule 59 (expression -> TRUE .)


state 23

    (60) expression -> FALSE .

    LESS_THEN       reduce using rule 60 (expression -> FALSE .)
    GREATER_THEN    reduce using rule 60 (expression -> FALSE .)
    LESS_EQUALS     reduce using rule 60 (expression -> FALSE .)
    GREATER_EQUALS  reduce using rule 60 (expression -> FALSE .)
    EQUALS          reduce using rule 60 (expression -> FALSE .)
    NOT_EQUALS      reduce using rule 60 (expression -> FALSE .)
    AND             reduce using rule 60 (expression -> FALSE .)
    NAND            reduce using rule 60 (expression -> FALSE .)
    OR              reduce using rule 60 (expression -> FALSE .)
    NOR             reduce using rule 60 (expression -> FALSE .)
    XOR             reduce using rule 60 (expression -> FALSE .)
    EQ              reduce using rule 60 (expression -> FALSE .)
    NEQ             reduce using rule 60 (expression -> FALSE .)
    IMPL            reduce using rule 60 (expression -> FALSE .)
    PLUS            reduce using rule 60 (expression -> FALSE .)
    MINUS           reduce using rule 60 (expression -> FALSE .)
    TIMES           reduce using rule 60 (expression -> FALSE .)
    DIVIDE          reduce using rule 60 (expression -> FALSE .)
    ASSIGN          reduce using rule 60 (expression -> FALSE .)
    LPAREN          reduce using rule 60 (expression -> FALSE .)
    DOT             reduce using rule 60 (expression -> FALSE .)
    $end            reduce using rule 60 (expression -> FALSE .)
    SEPARATOR       reduce using rule 60 (expression -> FALSE .)
    RPAREN          reduce using rule 60 (expression -> FALSE .)
    DO              reduce using rule 60 (expression -> FALSE .)
    END             reduce using rule 60 (expression -> FALSE .)
    THEN            reduce using rule 60 (expression -> FALSE .)
    COMMA           reduce using rule 60 (expression -> FALSE .)
    RBRACKET        reduce using rule 60 (expression -> FALSE .)
    BEGIN           reduce using rule 60 (expression -> FALSE .)
    ELSE            reduce using rule 60 (expression -> FALSE .)
    IN              reduce using rule 60 (expression -> FALSE .)


state 24

    (61) expression -> STRUCT . BEGIN struct_body END

    BEGIN           shift and go to state 72


state 25

    (62) expression -> LBRACKET . expression_list RBRACKET
    (66) expression -> LBRACKET . RBRACKET
    (24) expression_list -> . expression
    (25) expression_list -> . expression COMMA expression_list
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RBRACKET        shift and go to state 74
    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression_list                shift and go to state 73
    expression                     shift and go to state 75
    dots                           shift and go to state 27

state 26

    (63) expression -> ARRAY . LPAREN expression_list RPAREN
    (67) expression -> ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 76


state 27

    (69) expression -> dots . IDENTIFIER
    (43) dots -> dots . DOT

    IDENTIFIER      shift and go to state 77
    DOT             shift and go to state 78


state 28

    (72) expression -> EXTEND . expression BEGIN struct_body END
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 79
    dots                           shift and go to state 27

state 29

    (73) expression -> SIZE . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 80


state 30

    (42) dots -> DOT .

    IDENTIFIER      reduce using rule 42 (dots -> DOT .)
    DOT             reduce using rule 42 (dots -> DOT .)


state 31

    (6) expression -> expression LESS_THEN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 81
    dots                           shift and go to state 27

state 32

    (7) expression -> expression GREATER_THEN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 82
    dots                           shift and go to state 27

state 33

    (8) expression -> expression LESS_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 83
    dots                           shift and go to state 27

state 34

    (9) expression -> expression GREATER_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 84
    dots                           shift and go to state 27

state 35

    (10) expression -> expression EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 85
    dots                           shift and go to state 27

state 36

    (11) expression -> expression NOT_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 86
    dots                           shift and go to state 27

state 37

    (30) expression -> expression AND . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 87
    dots                           shift and go to state 27

state 38

    (31) expression -> expression NAND . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 88
    dots                           shift and go to state 27

state 39

    (32) expression -> expression OR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 89
    dots                           shift and go to state 27

state 40

    (33) expression -> expression NOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 90
    dots                           shift and go to state 27

state 41

    (34) expression -> expression XOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 91
    dots                           shift and go to state 27

state 42

    (35) expression -> expression EQ . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 92
    dots                           shift and go to state 27

state 43

    (36) expression -> expression NEQ . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 93
    dots                           shift and go to state 27

state 44

    (37) expression -> expression IMPL . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 94
    dots                           shift and go to state 27

state 45

    (48) expression -> expression PLUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 95
    dots                           shift and go to state 27

state 46

    (49) expression -> expression MINUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 96
    dots                           shift and go to state 27

state 47

    (50) expression -> expression TIMES . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 97
    dots                           shift and go to state 27

state 48

    (51) expression -> expression DIVIDE . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 98
    dots                           shift and go to state 27

state 49

    (52) expression -> expression ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 99
    dots                           shift and go to state 27

state 50

    (65) expression -> expression dots . IDENTIFIER
    (43) dots -> dots . DOT

    IDENTIFIER      shift and go to state 100
    DOT             shift and go to state 78


state 51

    (68) expression -> expression LPAREN . expression_list RPAREN
    (70) expression -> expression LPAREN . RPAREN
    (24) expression_list -> . expression
    (25) expression_list -> . expression COMMA expression_list
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RPAREN          shift and go to state 102
    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 75
    expression_list                shift and go to state 101
    dots                           shift and go to state 27

state 52

    (1) expression -> FOR expression . SEPARATOR expression SEPARATOR expression DO expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    SEPARATOR       shift and go to state 103
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 53

    (4) expression -> PROC LPAREN . identifier_list RPAREN identifier_list ARROW expression
    (19) expression -> PROC LPAREN . RPAREN identifier_list ARROW expression
    (26) expression -> PROC LPAREN . identifier_list RPAREN ARROW expression
    (47) expression -> PROC LPAREN . RPAREN ARROW expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    RPAREN          shift and go to state 105
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 104

state 54

    (58) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RPAREN          shift and go to state 106
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 55

    (5) expression -> WHILE expression . DO expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    DO              shift and go to state 107
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 56

    (18) expression -> LOOP expression . DO expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    DO              shift and go to state 108
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 57

    (20) expression -> BEGIN body . END
    (28) body -> body . SEPARATOR expression

    END             shift and go to state 109
    SEPARATOR       shift and go to state 110


state 58

    (27) body -> expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    END             reduce using rule 27 (body -> expression .)
    SEPARATOR       reduce using rule 27 (body -> expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 59

    (71) expression -> IDENTIFIER LBRACKET . expression RBRACKET
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 111
    dots                           shift and go to state 27

state 60

    (22) expression -> NOT expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 22 (expression -> NOT expression .)
    GREATER_THEN    reduce using rule 22 (expression -> NOT expression .)
    LESS_EQUALS     reduce using rule 22 (expression -> NOT expression .)
    GREATER_EQUALS  reduce using rule 22 (expression -> NOT expression .)
    EQUALS          reduce using rule 22 (expression -> NOT expression .)
    NOT_EQUALS      reduce using rule 22 (expression -> NOT expression .)
    AND             reduce using rule 22 (expression -> NOT expression .)
    NAND            reduce using rule 22 (expression -> NOT expression .)
    OR              reduce using rule 22 (expression -> NOT expression .)
    NOR             reduce using rule 22 (expression -> NOT expression .)
    XOR             reduce using rule 22 (expression -> NOT expression .)
    EQ              reduce using rule 22 (expression -> NOT expression .)
    NEQ             reduce using rule 22 (expression -> NOT expression .)
    IMPL            reduce using rule 22 (expression -> NOT expression .)
    PLUS            reduce using rule 22 (expression -> NOT expression .)
    MINUS           reduce using rule 22 (expression -> NOT expression .)
    TIMES           reduce using rule 22 (expression -> NOT expression .)
    DIVIDE          reduce using rule 22 (expression -> NOT expression .)
    ASSIGN          reduce using rule 22 (expression -> NOT expression .)
    $end            reduce using rule 22 (expression -> NOT expression .)
    SEPARATOR       reduce using rule 22 (expression -> NOT expression .)
    RPAREN          reduce using rule 22 (expression -> NOT expression .)
    DO              reduce using rule 22 (expression -> NOT expression .)
    END             reduce using rule 22 (expression -> NOT expression .)
    THEN            reduce using rule 22 (expression -> NOT expression .)
    COMMA           reduce using rule 22 (expression -> NOT expression .)
    RBRACKET        reduce using rule 22 (expression -> NOT expression .)
    BEGIN           reduce using rule 22 (expression -> NOT expression .)
    ELSE            reduce using rule 22 (expression -> NOT expression .)
    IN              reduce using rule 22 (expression -> NOT expression .)
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LPAREN          [ reduce using rule 22 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 22 (expression -> NOT expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 61

    (23) expression -> IF expression . THEN expression
    (38) expression -> IF expression . THEN expression ELSE expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    THEN            shift and go to state 112
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 62

    (29) expression -> MINUS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 29 (expression -> MINUS expression .)
    GREATER_THEN    reduce using rule 29 (expression -> MINUS expression .)
    LESS_EQUALS     reduce using rule 29 (expression -> MINUS expression .)
    GREATER_EQUALS  reduce using rule 29 (expression -> MINUS expression .)
    EQUALS          reduce using rule 29 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 29 (expression -> MINUS expression .)
    AND             reduce using rule 29 (expression -> MINUS expression .)
    NAND            reduce using rule 29 (expression -> MINUS expression .)
    OR              reduce using rule 29 (expression -> MINUS expression .)
    NOR             reduce using rule 29 (expression -> MINUS expression .)
    XOR             reduce using rule 29 (expression -> MINUS expression .)
    EQ              reduce using rule 29 (expression -> MINUS expression .)
    NEQ             reduce using rule 29 (expression -> MINUS expression .)
    IMPL            reduce using rule 29 (expression -> MINUS expression .)
    PLUS            reduce using rule 29 (expression -> MINUS expression .)
    MINUS           reduce using rule 29 (expression -> MINUS expression .)
    TIMES           reduce using rule 29 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 29 (expression -> MINUS expression .)
    ASSIGN          reduce using rule 29 (expression -> MINUS expression .)
    $end            reduce using rule 29 (expression -> MINUS expression .)
    SEPARATOR       reduce using rule 29 (expression -> MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> MINUS expression .)
    DO              reduce using rule 29 (expression -> MINUS expression .)
    END             reduce using rule 29 (expression -> MINUS expression .)
    THEN            reduce using rule 29 (expression -> MINUS expression .)
    COMMA           reduce using rule 29 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 29 (expression -> MINUS expression .)
    BEGIN           reduce using rule 29 (expression -> MINUS expression .)
    ELSE            reduce using rule 29 (expression -> MINUS expression .)
    IN              reduce using rule 29 (expression -> MINUS expression .)
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LPAREN          [ reduce using rule 29 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> MINUS expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 63

    (39) expression -> LOCAL assign_list . IN expression
    (3) assign_list -> assign_list . COMMA IDENTIFIER ASSIGN expression

    IN              shift and go to state 113
    COMMA           shift and go to state 114


state 64

    (2) assign_list -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 115


state 65

    (40) expression -> LOCK identifier_list . IN expression

    IN              shift and go to state 116


state 66

    (16) identifier_list -> IDENTIFIER .
    (17) identifier_list -> IDENTIFIER . COMMA identifier_list

    IN              reduce using rule 16 (identifier_list -> IDENTIFIER .)
    ARROW           reduce using rule 16 (identifier_list -> IDENTIFIER .)
    RPAREN          reduce using rule 16 (identifier_list -> IDENTIFIER .)
    COMMA           shift and go to state 117


state 67

    (44) expression -> LAMBDA LPAREN . RPAREN ARROW expression
    (46) expression -> LAMBDA LPAREN . identifier_list RPAREN ARROW expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    RPAREN          shift and go to state 118
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 119

state 68

    (64) expression -> LAMBDA ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 120
    dots                           shift and go to state 27

state 69

    (45) expression -> LAMBDA identifier_list . ARROW expression

    ARROW           shift and go to state 121


state 70

    (53) expression -> LIST LPAREN . expression_list RPAREN
    (57) expression -> LIST LPAREN . RPAREN
    (24) expression_list -> . expression
    (25) expression_list -> . expression COMMA expression_list
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RPAREN          shift and go to state 123
    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression_list                shift and go to state 122
    expression                     shift and go to state 75
    dots                           shift and go to state 27

state 71

    (54) expression -> LOCALREC assign_list . IN expression
    (3) assign_list -> assign_list . COMMA IDENTIFIER ASSIGN expression

    IN              shift and go to state 124
    COMMA           shift and go to state 114


state 72

    (61) expression -> STRUCT BEGIN . struct_body END
    (55) struct_body -> . IDENTIFIER ASSIGN expression
    (56) struct_body -> . struct_body SEPARATOR IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 126

    struct_body                    shift and go to state 125

state 73

    (62) expression -> LBRACKET expression_list . RBRACKET

    RBRACKET        shift and go to state 127


state 74

    (66) expression -> LBRACKET RBRACKET .

    LESS_THEN       reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    GREATER_THEN    reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    LESS_EQUALS     reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    GREATER_EQUALS  reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    NOT_EQUALS      reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    AND             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    NAND            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    OR              reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    NOR             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    XOR             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    EQ              reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    NEQ             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    IMPL            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    DOT             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    $end            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    SEPARATOR       reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    DO              reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    END             reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    THEN            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    BEGIN           reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 66 (expression -> LBRACKET RBRACKET .)
    IN              reduce using rule 66 (expression -> LBRACKET RBRACKET .)


state 75

    (24) expression_list -> expression .
    (25) expression_list -> expression . COMMA expression_list
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RBRACKET        reduce using rule 24 (expression_list -> expression .)
    RPAREN          reduce using rule 24 (expression_list -> expression .)
    COMMA           shift and go to state 128
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 76

    (63) expression -> ARRAY LPAREN . expression_list RPAREN
    (67) expression -> ARRAY LPAREN . RPAREN
    (24) expression_list -> . expression
    (25) expression_list -> . expression COMMA expression_list
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RPAREN          shift and go to state 130
    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression_list                shift and go to state 129
    expression                     shift and go to state 75
    dots                           shift and go to state 27

state 77

    (69) expression -> dots IDENTIFIER .

    LESS_THEN       reduce using rule 69 (expression -> dots IDENTIFIER .)
    GREATER_THEN    reduce using rule 69 (expression -> dots IDENTIFIER .)
    LESS_EQUALS     reduce using rule 69 (expression -> dots IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 69 (expression -> dots IDENTIFIER .)
    EQUALS          reduce using rule 69 (expression -> dots IDENTIFIER .)
    NOT_EQUALS      reduce using rule 69 (expression -> dots IDENTIFIER .)
    AND             reduce using rule 69 (expression -> dots IDENTIFIER .)
    NAND            reduce using rule 69 (expression -> dots IDENTIFIER .)
    OR              reduce using rule 69 (expression -> dots IDENTIFIER .)
    NOR             reduce using rule 69 (expression -> dots IDENTIFIER .)
    XOR             reduce using rule 69 (expression -> dots IDENTIFIER .)
    EQ              reduce using rule 69 (expression -> dots IDENTIFIER .)
    NEQ             reduce using rule 69 (expression -> dots IDENTIFIER .)
    IMPL            reduce using rule 69 (expression -> dots IDENTIFIER .)
    PLUS            reduce using rule 69 (expression -> dots IDENTIFIER .)
    MINUS           reduce using rule 69 (expression -> dots IDENTIFIER .)
    TIMES           reduce using rule 69 (expression -> dots IDENTIFIER .)
    DIVIDE          reduce using rule 69 (expression -> dots IDENTIFIER .)
    ASSIGN          reduce using rule 69 (expression -> dots IDENTIFIER .)
    LPAREN          reduce using rule 69 (expression -> dots IDENTIFIER .)
    DOT             reduce using rule 69 (expression -> dots IDENTIFIER .)
    $end            reduce using rule 69 (expression -> dots IDENTIFIER .)
    SEPARATOR       reduce using rule 69 (expression -> dots IDENTIFIER .)
    RPAREN          reduce using rule 69 (expression -> dots IDENTIFIER .)
    DO              reduce using rule 69 (expression -> dots IDENTIFIER .)
    END             reduce using rule 69 (expression -> dots IDENTIFIER .)
    THEN            reduce using rule 69 (expression -> dots IDENTIFIER .)
    COMMA           reduce using rule 69 (expression -> dots IDENTIFIER .)
    RBRACKET        reduce using rule 69 (expression -> dots IDENTIFIER .)
    BEGIN           reduce using rule 69 (expression -> dots IDENTIFIER .)
    ELSE            reduce using rule 69 (expression -> dots IDENTIFIER .)
    IN              reduce using rule 69 (expression -> dots IDENTIFIER .)


state 78

    (43) dots -> dots DOT .

    IDENTIFIER      reduce using rule 43 (dots -> dots DOT .)
    DOT             reduce using rule 43 (dots -> dots DOT .)


state 79

    (72) expression -> EXTEND expression . BEGIN struct_body END
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    BEGIN           shift and go to state 131
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 80

    (73) expression -> SIZE LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 132


state 81

    (6) expression -> expression LESS_THEN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 6 (expression -> expression LESS_THEN expression .)
    GREATER_THEN    reduce using rule 6 (expression -> expression LESS_THEN expression .)
    LESS_EQUALS     reduce using rule 6 (expression -> expression LESS_THEN expression .)
    GREATER_EQUALS  reduce using rule 6 (expression -> expression LESS_THEN expression .)
    EQUALS          reduce using rule 6 (expression -> expression LESS_THEN expression .)
    NOT_EQUALS      reduce using rule 6 (expression -> expression LESS_THEN expression .)
    AND             reduce using rule 6 (expression -> expression LESS_THEN expression .)
    NAND            reduce using rule 6 (expression -> expression LESS_THEN expression .)
    OR              reduce using rule 6 (expression -> expression LESS_THEN expression .)
    NOR             reduce using rule 6 (expression -> expression LESS_THEN expression .)
    XOR             reduce using rule 6 (expression -> expression LESS_THEN expression .)
    EQ              reduce using rule 6 (expression -> expression LESS_THEN expression .)
    NEQ             reduce using rule 6 (expression -> expression LESS_THEN expression .)
    IMPL            reduce using rule 6 (expression -> expression LESS_THEN expression .)
    ASSIGN          reduce using rule 6 (expression -> expression LESS_THEN expression .)
    $end            reduce using rule 6 (expression -> expression LESS_THEN expression .)
    SEPARATOR       reduce using rule 6 (expression -> expression LESS_THEN expression .)
    RPAREN          reduce using rule 6 (expression -> expression LESS_THEN expression .)
    DO              reduce using rule 6 (expression -> expression LESS_THEN expression .)
    END             reduce using rule 6 (expression -> expression LESS_THEN expression .)
    THEN            reduce using rule 6 (expression -> expression LESS_THEN expression .)
    COMMA           reduce using rule 6 (expression -> expression LESS_THEN expression .)
    RBRACKET        reduce using rule 6 (expression -> expression LESS_THEN expression .)
    BEGIN           reduce using rule 6 (expression -> expression LESS_THEN expression .)
    ELSE            reduce using rule 6 (expression -> expression LESS_THEN expression .)
    IN              reduce using rule 6 (expression -> expression LESS_THEN expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! PLUS            [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! LPAREN          [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! DOT             [ reduce using rule 6 (expression -> expression LESS_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 82

    (7) expression -> expression GREATER_THEN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    GREATER_THEN    reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    LESS_EQUALS     reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    GREATER_EQUALS  reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    EQUALS          reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    NOT_EQUALS      reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    AND             reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    NAND            reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    OR              reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    NOR             reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    XOR             reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    EQ              reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    NEQ             reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    IMPL            reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    ASSIGN          reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    $end            reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    SEPARATOR       reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    RPAREN          reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    DO              reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    END             reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    THEN            reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    COMMA           reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    RBRACKET        reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    BEGIN           reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    ELSE            reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    IN              reduce using rule 7 (expression -> expression GREATER_THEN expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! PLUS            [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! LPAREN          [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! DOT             [ reduce using rule 7 (expression -> expression GREATER_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 83

    (8) expression -> expression LESS_EQUALS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    GREATER_THEN    reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    LESS_EQUALS     reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    EQUALS          reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    NOT_EQUALS      reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    AND             reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    NAND            reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    OR              reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    NOR             reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    XOR             reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    EQ              reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    NEQ             reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    IMPL            reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    ASSIGN          reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    $end            reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    SEPARATOR       reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    RPAREN          reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    DO              reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    END             reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    THEN            reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    COMMA           reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    RBRACKET        reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    BEGIN           reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    ELSE            reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    IN              reduce using rule 8 (expression -> expression LESS_EQUALS expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! PLUS            [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! DOT             [ reduce using rule 8 (expression -> expression LESS_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 84

    (9) expression -> expression GREATER_EQUALS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    GREATER_THEN    reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    LESS_EQUALS     reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    EQUALS          reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    NOT_EQUALS      reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    AND             reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    NAND            reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    OR              reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    NOR             reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    XOR             reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    EQ              reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    NEQ             reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    IMPL            reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    ASSIGN          reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    $end            reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    SEPARATOR       reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    RPAREN          reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    DO              reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    END             reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    THEN            reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    COMMA           reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    RBRACKET        reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    BEGIN           reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    ELSE            reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    IN              reduce using rule 9 (expression -> expression GREATER_EQUALS expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! PLUS            [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! DOT             [ reduce using rule 9 (expression -> expression GREATER_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 85

    (10) expression -> expression EQUALS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    EQUALS          reduce using rule 10 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 10 (expression -> expression EQUALS expression .)
    AND             reduce using rule 10 (expression -> expression EQUALS expression .)
    NAND            reduce using rule 10 (expression -> expression EQUALS expression .)
    OR              reduce using rule 10 (expression -> expression EQUALS expression .)
    NOR             reduce using rule 10 (expression -> expression EQUALS expression .)
    XOR             reduce using rule 10 (expression -> expression EQUALS expression .)
    EQ              reduce using rule 10 (expression -> expression EQUALS expression .)
    NEQ             reduce using rule 10 (expression -> expression EQUALS expression .)
    IMPL            reduce using rule 10 (expression -> expression EQUALS expression .)
    ASSIGN          reduce using rule 10 (expression -> expression EQUALS expression .)
    $end            reduce using rule 10 (expression -> expression EQUALS expression .)
    SEPARATOR       reduce using rule 10 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 10 (expression -> expression EQUALS expression .)
    DO              reduce using rule 10 (expression -> expression EQUALS expression .)
    END             reduce using rule 10 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 10 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 10 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 10 (expression -> expression EQUALS expression .)
    BEGIN           reduce using rule 10 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 10 (expression -> expression EQUALS expression .)
    IN              reduce using rule 10 (expression -> expression EQUALS expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 10 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 86

    (11) expression -> expression NOT_EQUALS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    EQUALS          reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    AND             reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    NAND            reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    OR              reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    NOR             reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    XOR             reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    EQ              reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    NEQ             reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    IMPL            reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    ASSIGN          reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    SEPARATOR       reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    DO              reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    END             reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    THEN            reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    COMMA           reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    RBRACKET        reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    BEGIN           reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    IN              reduce using rule 11 (expression -> expression NOT_EQUALS expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! DOT             [ reduce using rule 11 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 87

    (30) expression -> expression AND expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 30 (expression -> expression AND expression .)
    NAND            reduce using rule 30 (expression -> expression AND expression .)
    OR              reduce using rule 30 (expression -> expression AND expression .)
    NOR             reduce using rule 30 (expression -> expression AND expression .)
    ASSIGN          reduce using rule 30 (expression -> expression AND expression .)
    $end            reduce using rule 30 (expression -> expression AND expression .)
    SEPARATOR       reduce using rule 30 (expression -> expression AND expression .)
    RPAREN          reduce using rule 30 (expression -> expression AND expression .)
    DO              reduce using rule 30 (expression -> expression AND expression .)
    END             reduce using rule 30 (expression -> expression AND expression .)
    THEN            reduce using rule 30 (expression -> expression AND expression .)
    COMMA           reduce using rule 30 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 30 (expression -> expression AND expression .)
    BEGIN           reduce using rule 30 (expression -> expression AND expression .)
    ELSE            reduce using rule 30 (expression -> expression AND expression .)
    IN              reduce using rule 30 (expression -> expression AND expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! GREATER_THEN    [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! IMPL            [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 88

    (31) expression -> expression NAND expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 31 (expression -> expression NAND expression .)
    NAND            reduce using rule 31 (expression -> expression NAND expression .)
    OR              reduce using rule 31 (expression -> expression NAND expression .)
    NOR             reduce using rule 31 (expression -> expression NAND expression .)
    ASSIGN          reduce using rule 31 (expression -> expression NAND expression .)
    $end            reduce using rule 31 (expression -> expression NAND expression .)
    SEPARATOR       reduce using rule 31 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 31 (expression -> expression NAND expression .)
    DO              reduce using rule 31 (expression -> expression NAND expression .)
    END             reduce using rule 31 (expression -> expression NAND expression .)
    THEN            reduce using rule 31 (expression -> expression NAND expression .)
    COMMA           reduce using rule 31 (expression -> expression NAND expression .)
    RBRACKET        reduce using rule 31 (expression -> expression NAND expression .)
    BEGIN           reduce using rule 31 (expression -> expression NAND expression .)
    ELSE            reduce using rule 31 (expression -> expression NAND expression .)
    IN              reduce using rule 31 (expression -> expression NAND expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! GREATER_THEN    [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! XOR             [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! NEQ             [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! IMPL            [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! LPAREN          [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression NAND expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 89

    (32) expression -> expression OR expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    OR              reduce using rule 32 (expression -> expression OR expression .)
    NOR             reduce using rule 32 (expression -> expression OR expression .)
    ASSIGN          reduce using rule 32 (expression -> expression OR expression .)
    $end            reduce using rule 32 (expression -> expression OR expression .)
    SEPARATOR       reduce using rule 32 (expression -> expression OR expression .)
    RPAREN          reduce using rule 32 (expression -> expression OR expression .)
    DO              reduce using rule 32 (expression -> expression OR expression .)
    END             reduce using rule 32 (expression -> expression OR expression .)
    THEN            reduce using rule 32 (expression -> expression OR expression .)
    COMMA           reduce using rule 32 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 32 (expression -> expression OR expression .)
    BEGIN           reduce using rule 32 (expression -> expression OR expression .)
    ELSE            reduce using rule 32 (expression -> expression OR expression .)
    IN              reduce using rule 32 (expression -> expression OR expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! GREATER_THEN    [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! NAND            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IMPL            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 90

    (33) expression -> expression NOR expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    OR              reduce using rule 33 (expression -> expression NOR expression .)
    NOR             reduce using rule 33 (expression -> expression NOR expression .)
    ASSIGN          reduce using rule 33 (expression -> expression NOR expression .)
    $end            reduce using rule 33 (expression -> expression NOR expression .)
    SEPARATOR       reduce using rule 33 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 33 (expression -> expression NOR expression .)
    DO              reduce using rule 33 (expression -> expression NOR expression .)
    END             reduce using rule 33 (expression -> expression NOR expression .)
    THEN            reduce using rule 33 (expression -> expression NOR expression .)
    COMMA           reduce using rule 33 (expression -> expression NOR expression .)
    RBRACKET        reduce using rule 33 (expression -> expression NOR expression .)
    BEGIN           reduce using rule 33 (expression -> expression NOR expression .)
    ELSE            reduce using rule 33 (expression -> expression NOR expression .)
    IN              reduce using rule 33 (expression -> expression NOR expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! EQUALS          [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! NAND            [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! XOR             [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! NEQ             [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! IMPL            [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! LPAREN          [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! DOT             [ reduce using rule 33 (expression -> expression NOR expression .) ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 91

    (34) expression -> expression XOR expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 34 (expression -> expression XOR expression .)
    NAND            reduce using rule 34 (expression -> expression XOR expression .)
    OR              reduce using rule 34 (expression -> expression XOR expression .)
    NOR             reduce using rule 34 (expression -> expression XOR expression .)
    XOR             reduce using rule 34 (expression -> expression XOR expression .)
    EQ              reduce using rule 34 (expression -> expression XOR expression .)
    NEQ             reduce using rule 34 (expression -> expression XOR expression .)
    IMPL            reduce using rule 34 (expression -> expression XOR expression .)
    ASSIGN          reduce using rule 34 (expression -> expression XOR expression .)
    $end            reduce using rule 34 (expression -> expression XOR expression .)
    SEPARATOR       reduce using rule 34 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 34 (expression -> expression XOR expression .)
    DO              reduce using rule 34 (expression -> expression XOR expression .)
    END             reduce using rule 34 (expression -> expression XOR expression .)
    THEN            reduce using rule 34 (expression -> expression XOR expression .)
    COMMA           reduce using rule 34 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 34 (expression -> expression XOR expression .)
    BEGIN           reduce using rule 34 (expression -> expression XOR expression .)
    ELSE            reduce using rule 34 (expression -> expression XOR expression .)
    IN              reduce using rule 34 (expression -> expression XOR expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! EQUALS          [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! LPAREN          [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! DOT             [ reduce using rule 34 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 92

    (35) expression -> expression EQ expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 35 (expression -> expression EQ expression .)
    NAND            reduce using rule 35 (expression -> expression EQ expression .)
    OR              reduce using rule 35 (expression -> expression EQ expression .)
    NOR             reduce using rule 35 (expression -> expression EQ expression .)
    XOR             reduce using rule 35 (expression -> expression EQ expression .)
    EQ              reduce using rule 35 (expression -> expression EQ expression .)
    NEQ             reduce using rule 35 (expression -> expression EQ expression .)
    IMPL            reduce using rule 35 (expression -> expression EQ expression .)
    ASSIGN          reduce using rule 35 (expression -> expression EQ expression .)
    $end            reduce using rule 35 (expression -> expression EQ expression .)
    SEPARATOR       reduce using rule 35 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQ expression .)
    DO              reduce using rule 35 (expression -> expression EQ expression .)
    END             reduce using rule 35 (expression -> expression EQ expression .)
    THEN            reduce using rule 35 (expression -> expression EQ expression .)
    COMMA           reduce using rule 35 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 35 (expression -> expression EQ expression .)
    BEGIN           reduce using rule 35 (expression -> expression EQ expression .)
    ELSE            reduce using rule 35 (expression -> expression EQ expression .)
    IN              reduce using rule 35 (expression -> expression EQ expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! EQUALS          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 35 (expression -> expression EQ expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 93

    (36) expression -> expression NEQ expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 36 (expression -> expression NEQ expression .)
    NAND            reduce using rule 36 (expression -> expression NEQ expression .)
    OR              reduce using rule 36 (expression -> expression NEQ expression .)
    NOR             reduce using rule 36 (expression -> expression NEQ expression .)
    XOR             reduce using rule 36 (expression -> expression NEQ expression .)
    EQ              reduce using rule 36 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 36 (expression -> expression NEQ expression .)
    IMPL            reduce using rule 36 (expression -> expression NEQ expression .)
    ASSIGN          reduce using rule 36 (expression -> expression NEQ expression .)
    $end            reduce using rule 36 (expression -> expression NEQ expression .)
    SEPARATOR       reduce using rule 36 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression NEQ expression .)
    DO              reduce using rule 36 (expression -> expression NEQ expression .)
    END             reduce using rule 36 (expression -> expression NEQ expression .)
    THEN            reduce using rule 36 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 36 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 36 (expression -> expression NEQ expression .)
    BEGIN           reduce using rule 36 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 36 (expression -> expression NEQ expression .)
    IN              reduce using rule 36 (expression -> expression NEQ expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 36 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 94

    (37) expression -> expression IMPL expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    AND             reduce using rule 37 (expression -> expression IMPL expression .)
    NAND            reduce using rule 37 (expression -> expression IMPL expression .)
    OR              reduce using rule 37 (expression -> expression IMPL expression .)
    NOR             reduce using rule 37 (expression -> expression IMPL expression .)
    XOR             reduce using rule 37 (expression -> expression IMPL expression .)
    EQ              reduce using rule 37 (expression -> expression IMPL expression .)
    NEQ             reduce using rule 37 (expression -> expression IMPL expression .)
    IMPL            reduce using rule 37 (expression -> expression IMPL expression .)
    ASSIGN          reduce using rule 37 (expression -> expression IMPL expression .)
    $end            reduce using rule 37 (expression -> expression IMPL expression .)
    SEPARATOR       reduce using rule 37 (expression -> expression IMPL expression .)
    RPAREN          reduce using rule 37 (expression -> expression IMPL expression .)
    DO              reduce using rule 37 (expression -> expression IMPL expression .)
    END             reduce using rule 37 (expression -> expression IMPL expression .)
    THEN            reduce using rule 37 (expression -> expression IMPL expression .)
    COMMA           reduce using rule 37 (expression -> expression IMPL expression .)
    RBRACKET        reduce using rule 37 (expression -> expression IMPL expression .)
    BEGIN           reduce using rule 37 (expression -> expression IMPL expression .)
    ELSE            reduce using rule 37 (expression -> expression IMPL expression .)
    IN              reduce using rule 37 (expression -> expression IMPL expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! GREATER_THEN    [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! LESS_EQUALS     [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! NOT_EQUALS      [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! LPAREN          [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! DOT             [ reduce using rule 37 (expression -> expression IMPL expression .) ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 95

    (48) expression -> expression PLUS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 48 (expression -> expression PLUS expression .)
    GREATER_THEN    reduce using rule 48 (expression -> expression PLUS expression .)
    LESS_EQUALS     reduce using rule 48 (expression -> expression PLUS expression .)
    GREATER_EQUALS  reduce using rule 48 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 48 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 48 (expression -> expression PLUS expression .)
    AND             reduce using rule 48 (expression -> expression PLUS expression .)
    NAND            reduce using rule 48 (expression -> expression PLUS expression .)
    OR              reduce using rule 48 (expression -> expression PLUS expression .)
    NOR             reduce using rule 48 (expression -> expression PLUS expression .)
    XOR             reduce using rule 48 (expression -> expression PLUS expression .)
    EQ              reduce using rule 48 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 48 (expression -> expression PLUS expression .)
    IMPL            reduce using rule 48 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 48 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 48 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 48 (expression -> expression PLUS expression .)
    $end            reduce using rule 48 (expression -> expression PLUS expression .)
    SEPARATOR       reduce using rule 48 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression PLUS expression .)
    DO              reduce using rule 48 (expression -> expression PLUS expression .)
    END             reduce using rule 48 (expression -> expression PLUS expression .)
    THEN            reduce using rule 48 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 48 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 48 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 48 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 48 (expression -> expression PLUS expression .)
    IN              reduce using rule 48 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! TIMES           [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! LPAREN          [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression PLUS expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 96

    (49) expression -> expression MINUS expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 49 (expression -> expression MINUS expression .)
    GREATER_THEN    reduce using rule 49 (expression -> expression MINUS expression .)
    LESS_EQUALS     reduce using rule 49 (expression -> expression MINUS expression .)
    GREATER_EQUALS  reduce using rule 49 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 49 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 49 (expression -> expression MINUS expression .)
    AND             reduce using rule 49 (expression -> expression MINUS expression .)
    NAND            reduce using rule 49 (expression -> expression MINUS expression .)
    OR              reduce using rule 49 (expression -> expression MINUS expression .)
    NOR             reduce using rule 49 (expression -> expression MINUS expression .)
    XOR             reduce using rule 49 (expression -> expression MINUS expression .)
    EQ              reduce using rule 49 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 49 (expression -> expression MINUS expression .)
    IMPL            reduce using rule 49 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 49 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 49 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 49 (expression -> expression MINUS expression .)
    $end            reduce using rule 49 (expression -> expression MINUS expression .)
    SEPARATOR       reduce using rule 49 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression MINUS expression .)
    DO              reduce using rule 49 (expression -> expression MINUS expression .)
    END             reduce using rule 49 (expression -> expression MINUS expression .)
    THEN            reduce using rule 49 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 49 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 49 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 49 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 49 (expression -> expression MINUS expression .)
    IN              reduce using rule 49 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! TIMES           [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression MINUS expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 97

    (50) expression -> expression TIMES expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 50 (expression -> expression TIMES expression .)
    GREATER_THEN    reduce using rule 50 (expression -> expression TIMES expression .)
    LESS_EQUALS     reduce using rule 50 (expression -> expression TIMES expression .)
    GREATER_EQUALS  reduce using rule 50 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 50 (expression -> expression TIMES expression .)
    NOT_EQUALS      reduce using rule 50 (expression -> expression TIMES expression .)
    AND             reduce using rule 50 (expression -> expression TIMES expression .)
    NAND            reduce using rule 50 (expression -> expression TIMES expression .)
    OR              reduce using rule 50 (expression -> expression TIMES expression .)
    NOR             reduce using rule 50 (expression -> expression TIMES expression .)
    XOR             reduce using rule 50 (expression -> expression TIMES expression .)
    EQ              reduce using rule 50 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 50 (expression -> expression TIMES expression .)
    IMPL            reduce using rule 50 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 50 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 50 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 50 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 50 (expression -> expression TIMES expression .)
    ASSIGN          reduce using rule 50 (expression -> expression TIMES expression .)
    $end            reduce using rule 50 (expression -> expression TIMES expression .)
    SEPARATOR       reduce using rule 50 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 50 (expression -> expression TIMES expression .)
    DO              reduce using rule 50 (expression -> expression TIMES expression .)
    END             reduce using rule 50 (expression -> expression TIMES expression .)
    THEN            reduce using rule 50 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 50 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 50 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 50 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 50 (expression -> expression TIMES expression .)
    IN              reduce using rule 50 (expression -> expression TIMES expression .)
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LPAREN          [ reduce using rule 50 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression TIMES expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 98

    (51) expression -> expression DIVIDE expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    LESS_THEN       reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATER_THEN    reduce using rule 51 (expression -> expression DIVIDE expression .)
    LESS_EQUALS     reduce using rule 51 (expression -> expression DIVIDE expression .)
    GREATER_EQUALS  reduce using rule 51 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 51 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 51 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 51 (expression -> expression DIVIDE expression .)
    NAND            reduce using rule 51 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 51 (expression -> expression DIVIDE expression .)
    NOR             reduce using rule 51 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 51 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 51 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 51 (expression -> expression DIVIDE expression .)
    IMPL            reduce using rule 51 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 51 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 51 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 51 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 51 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 51 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 51 (expression -> expression DIVIDE expression .)
    SEPARATOR       reduce using rule 51 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 51 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 51 (expression -> expression DIVIDE expression .)
    END             reduce using rule 51 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 51 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 51 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 51 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 51 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 51 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 51 (expression -> expression DIVIDE expression .)
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LPAREN          [ reduce using rule 51 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression DIVIDE expression .) ]
  ! LESS_THEN       [ shift and go to state 31 ]
  ! GREATER_THEN    [ shift and go to state 32 ]
  ! LESS_EQUALS     [ shift and go to state 33 ]
  ! GREATER_EQUALS  [ shift and go to state 34 ]
  ! EQUALS          [ shift and go to state 35 ]
  ! NOT_EQUALS      [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! NAND            [ shift and go to state 38 ]
  ! OR              [ shift and go to state 39 ]
  ! NOR             [ shift and go to state 40 ]
  ! XOR             [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NEQ             [ shift and go to state 43 ]
  ! IMPL            [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 47 ]
  ! DIVIDE          [ shift and go to state 48 ]
  ! ASSIGN          [ shift and go to state 49 ]

    dots                           shift and go to state 50

state 99

    (52) expression -> expression ASSIGN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 52 (expression -> expression ASSIGN expression .)
    SEPARATOR       reduce using rule 52 (expression -> expression ASSIGN expression .)
    RPAREN          reduce using rule 52 (expression -> expression ASSIGN expression .)
    DO              reduce using rule 52 (expression -> expression ASSIGN expression .)
    END             reduce using rule 52 (expression -> expression ASSIGN expression .)
    THEN            reduce using rule 52 (expression -> expression ASSIGN expression .)
    COMMA           reduce using rule 52 (expression -> expression ASSIGN expression .)
    RBRACKET        reduce using rule 52 (expression -> expression ASSIGN expression .)
    BEGIN           reduce using rule 52 (expression -> expression ASSIGN expression .)
    ELSE            reduce using rule 52 (expression -> expression ASSIGN expression .)
    IN              reduce using rule 52 (expression -> expression ASSIGN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! GREATER_THEN    [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! NAND            [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! OR              [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! NOR             [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! XOR             [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! EQ              [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! IMPL            [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! ASSIGN          [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression ASSIGN expression .) ]

    dots                           shift and go to state 50

state 100

    (65) expression -> expression dots IDENTIFIER .

    LESS_THEN       reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    GREATER_THEN    reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    LESS_EQUALS     reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    EQUALS          reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    NOT_EQUALS      reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    AND             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    NAND            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    OR              reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    NOR             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    XOR             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    EQ              reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    NEQ             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    IMPL            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    PLUS            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    MINUS           reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    TIMES           reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    DIVIDE          reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    ASSIGN          reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    LPAREN          reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    DOT             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    $end            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    SEPARATOR       reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    RPAREN          reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    DO              reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    END             reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    THEN            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    COMMA           reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    RBRACKET        reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    BEGIN           reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    ELSE            reduce using rule 65 (expression -> expression dots IDENTIFIER .)
    IN              reduce using rule 65 (expression -> expression dots IDENTIFIER .)


state 101

    (68) expression -> expression LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 133


state 102

    (70) expression -> expression LPAREN RPAREN .

    LESS_THEN       reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    EQUALS          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    AND             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NAND            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    OR              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NOR             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    XOR             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    EQ              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NEQ             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    IMPL            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    PLUS            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    MINUS           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    TIMES           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    ASSIGN          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LPAREN          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DOT             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    $end            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    SEPARATOR       reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    RPAREN          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DO              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    END             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    THEN            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    COMMA           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    BEGIN           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    ELSE            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    IN              reduce using rule 70 (expression -> expression LPAREN RPAREN .)


state 103

    (1) expression -> FOR expression SEPARATOR . expression SEPARATOR expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 134
    dots                           shift and go to state 27

state 104

    (4) expression -> PROC LPAREN identifier_list . RPAREN identifier_list ARROW expression
    (26) expression -> PROC LPAREN identifier_list . RPAREN ARROW expression

    RPAREN          shift and go to state 135


state 105

    (19) expression -> PROC LPAREN RPAREN . identifier_list ARROW expression
    (47) expression -> PROC LPAREN RPAREN . ARROW expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    ARROW           shift and go to state 137
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 136

state 106

    (58) expression -> LPAREN expression RPAREN .

    LESS_THEN       reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    GREATER_THEN    reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    NAND            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    IMPL            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 58 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 58 (expression -> LPAREN expression RPAREN .)


state 107

    (5) expression -> WHILE expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 138
    dots                           shift and go to state 27

state 108

    (18) expression -> LOOP expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 139
    dots                           shift and go to state 27

state 109

    (20) expression -> BEGIN body END .

    LESS_THEN       reduce using rule 20 (expression -> BEGIN body END .)
    GREATER_THEN    reduce using rule 20 (expression -> BEGIN body END .)
    LESS_EQUALS     reduce using rule 20 (expression -> BEGIN body END .)
    GREATER_EQUALS  reduce using rule 20 (expression -> BEGIN body END .)
    EQUALS          reduce using rule 20 (expression -> BEGIN body END .)
    NOT_EQUALS      reduce using rule 20 (expression -> BEGIN body END .)
    AND             reduce using rule 20 (expression -> BEGIN body END .)
    NAND            reduce using rule 20 (expression -> BEGIN body END .)
    OR              reduce using rule 20 (expression -> BEGIN body END .)
    NOR             reduce using rule 20 (expression -> BEGIN body END .)
    XOR             reduce using rule 20 (expression -> BEGIN body END .)
    EQ              reduce using rule 20 (expression -> BEGIN body END .)
    NEQ             reduce using rule 20 (expression -> BEGIN body END .)
    IMPL            reduce using rule 20 (expression -> BEGIN body END .)
    PLUS            reduce using rule 20 (expression -> BEGIN body END .)
    MINUS           reduce using rule 20 (expression -> BEGIN body END .)
    TIMES           reduce using rule 20 (expression -> BEGIN body END .)
    DIVIDE          reduce using rule 20 (expression -> BEGIN body END .)
    ASSIGN          reduce using rule 20 (expression -> BEGIN body END .)
    LPAREN          reduce using rule 20 (expression -> BEGIN body END .)
    DOT             reduce using rule 20 (expression -> BEGIN body END .)
    $end            reduce using rule 20 (expression -> BEGIN body END .)
    SEPARATOR       reduce using rule 20 (expression -> BEGIN body END .)
    RPAREN          reduce using rule 20 (expression -> BEGIN body END .)
    DO              reduce using rule 20 (expression -> BEGIN body END .)
    END             reduce using rule 20 (expression -> BEGIN body END .)
    THEN            reduce using rule 20 (expression -> BEGIN body END .)
    COMMA           reduce using rule 20 (expression -> BEGIN body END .)
    RBRACKET        reduce using rule 20 (expression -> BEGIN body END .)
    BEGIN           reduce using rule 20 (expression -> BEGIN body END .)
    ELSE            reduce using rule 20 (expression -> BEGIN body END .)
    IN              reduce using rule 20 (expression -> BEGIN body END .)


state 110

    (28) body -> body SEPARATOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 140
    dots                           shift and go to state 27

state 111

    (71) expression -> IDENTIFIER LBRACKET expression . RBRACKET
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    RBRACKET        shift and go to state 141
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 112

    (23) expression -> IF expression THEN . expression
    (38) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 142
    dots                           shift and go to state 27

state 113

    (39) expression -> LOCAL assign_list IN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 143
    dots                           shift and go to state 27

state 114

    (3) assign_list -> assign_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 144


state 115

    (2) assign_list -> IDENTIFIER ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 145
    dots                           shift and go to state 27

state 116

    (40) expression -> LOCK identifier_list IN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 146
    dots                           shift and go to state 27

state 117

    (17) identifier_list -> IDENTIFIER COMMA . identifier_list
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 147

state 118

    (44) expression -> LAMBDA LPAREN RPAREN . ARROW expression

    ARROW           shift and go to state 148


state 119

    (46) expression -> LAMBDA LPAREN identifier_list . RPAREN ARROW expression

    RPAREN          shift and go to state 149


state 120

    (64) expression -> LAMBDA ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    SEPARATOR       reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    RPAREN          reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    DO              reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    END             reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    THEN            reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    COMMA           reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    RBRACKET        reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    BEGIN           reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    ELSE            reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    IN              reduce using rule 64 (expression -> LAMBDA ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! EQUALS          [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! AND             [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! NAND            [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! OR              [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! NOR             [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! XOR             [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! EQ              [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! NEQ             [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! IMPL            [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! PLUS            [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! LPAREN          [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]
  ! DOT             [ reduce using rule 64 (expression -> LAMBDA ARROW expression .) ]

    dots                           shift and go to state 50

state 121

    (45) expression -> LAMBDA identifier_list ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 150
    dots                           shift and go to state 27

state 122

    (53) expression -> LIST LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 151


state 123

    (57) expression -> LIST LPAREN RPAREN .

    LESS_THEN       reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    EQUALS          reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    AND             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    NAND            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    OR              reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    NOR             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    XOR             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    EQ              reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    NEQ             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    IMPL            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    PLUS            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    MINUS           reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    TIMES           reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    DIVIDE          reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    ASSIGN          reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    LPAREN          reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    DOT             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    $end            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    SEPARATOR       reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    RPAREN          reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    DO              reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    END             reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    THEN            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    COMMA           reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    RBRACKET        reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    BEGIN           reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    ELSE            reduce using rule 57 (expression -> LIST LPAREN RPAREN .)
    IN              reduce using rule 57 (expression -> LIST LPAREN RPAREN .)


state 124

    (54) expression -> LOCALREC assign_list IN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 152
    dots                           shift and go to state 27

state 125

    (61) expression -> STRUCT BEGIN struct_body . END
    (56) struct_body -> struct_body . SEPARATOR IDENTIFIER ASSIGN expression

    END             shift and go to state 153
    SEPARATOR       shift and go to state 154


state 126

    (55) struct_body -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 155


state 127

    (62) expression -> LBRACKET expression_list RBRACKET .

    LESS_THEN       reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    GREATER_THEN    reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    LESS_EQUALS     reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    GREATER_EQUALS  reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    NOT_EQUALS      reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    NAND            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    NOR             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    NEQ             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    IMPL            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    ASSIGN          reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    DOT             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    $end            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    SEPARATOR       reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    DO              reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    END             reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    BEGIN           reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)
    IN              reduce using rule 62 (expression -> LBRACKET expression_list RBRACKET .)


state 128

    (25) expression_list -> expression COMMA . expression_list
    (24) expression_list -> . expression
    (25) expression_list -> . expression COMMA expression_list
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 75
    expression_list                shift and go to state 156
    dots                           shift and go to state 27

state 129

    (63) expression -> ARRAY LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 157


state 130

    (67) expression -> ARRAY LPAREN RPAREN .

    LESS_THEN       reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    EQUALS          reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    AND             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    NAND            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    OR              reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    NOR             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    XOR             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    EQ              reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    NEQ             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    IMPL            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    PLUS            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    MINUS           reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    TIMES           reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    DIVIDE          reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    ASSIGN          reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    LPAREN          reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    DOT             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    $end            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    SEPARATOR       reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    RPAREN          reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    DO              reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    END             reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    THEN            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    BEGIN           reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    ELSE            reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)
    IN              reduce using rule 67 (expression -> ARRAY LPAREN RPAREN .)


state 131

    (72) expression -> EXTEND expression BEGIN . struct_body END
    (55) struct_body -> . IDENTIFIER ASSIGN expression
    (56) struct_body -> . struct_body SEPARATOR IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 126

    struct_body                    shift and go to state 158

state 132

    (73) expression -> SIZE LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 159


state 133

    (68) expression -> expression LPAREN expression_list RPAREN .

    LESS_THEN       reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    AND             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    NAND            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    OR              reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    NOR             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    XOR             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    EQ              reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    ASSIGN          reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    DOT             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    $end            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    DO              reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    END             reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    THEN            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)
    IN              reduce using rule 68 (expression -> expression LPAREN expression_list RPAREN .)


state 134

    (1) expression -> FOR expression SEPARATOR expression . SEPARATOR expression DO expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    SEPARATOR       shift and go to state 160
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 135

    (4) expression -> PROC LPAREN identifier_list RPAREN . identifier_list ARROW expression
    (26) expression -> PROC LPAREN identifier_list RPAREN . ARROW expression
    (16) identifier_list -> . IDENTIFIER
    (17) identifier_list -> . IDENTIFIER COMMA identifier_list

    ARROW           shift and go to state 162
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 161

state 136

    (19) expression -> PROC LPAREN RPAREN identifier_list . ARROW expression

    ARROW           shift and go to state 163


state 137

    (47) expression -> PROC LPAREN RPAREN ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 164
    dots                           shift and go to state 27

state 138

    (5) expression -> WHILE expression DO expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 5 (expression -> WHILE expression DO expression .)
    SEPARATOR       reduce using rule 5 (expression -> WHILE expression DO expression .)
    RPAREN          reduce using rule 5 (expression -> WHILE expression DO expression .)
    DO              reduce using rule 5 (expression -> WHILE expression DO expression .)
    END             reduce using rule 5 (expression -> WHILE expression DO expression .)
    THEN            reduce using rule 5 (expression -> WHILE expression DO expression .)
    COMMA           reduce using rule 5 (expression -> WHILE expression DO expression .)
    RBRACKET        reduce using rule 5 (expression -> WHILE expression DO expression .)
    BEGIN           reduce using rule 5 (expression -> WHILE expression DO expression .)
    ELSE            reduce using rule 5 (expression -> WHILE expression DO expression .)
    IN              reduce using rule 5 (expression -> WHILE expression DO expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! EQUALS          [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! AND             [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! NAND            [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! OR              [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! NOR             [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! XOR             [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! EQ              [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! NEQ             [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! IMPL            [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! PLUS            [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! ASSIGN          [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! LPAREN          [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]
  ! DOT             [ reduce using rule 5 (expression -> WHILE expression DO expression .) ]

    dots                           shift and go to state 50

state 139

    (18) expression -> LOOP expression DO expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 18 (expression -> LOOP expression DO expression .)
    SEPARATOR       reduce using rule 18 (expression -> LOOP expression DO expression .)
    RPAREN          reduce using rule 18 (expression -> LOOP expression DO expression .)
    DO              reduce using rule 18 (expression -> LOOP expression DO expression .)
    END             reduce using rule 18 (expression -> LOOP expression DO expression .)
    THEN            reduce using rule 18 (expression -> LOOP expression DO expression .)
    COMMA           reduce using rule 18 (expression -> LOOP expression DO expression .)
    RBRACKET        reduce using rule 18 (expression -> LOOP expression DO expression .)
    BEGIN           reduce using rule 18 (expression -> LOOP expression DO expression .)
    ELSE            reduce using rule 18 (expression -> LOOP expression DO expression .)
    IN              reduce using rule 18 (expression -> LOOP expression DO expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! AND             [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! NAND            [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! OR              [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! NOR             [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! XOR             [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! IMPL            [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! PLUS            [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! ASSIGN          [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! LPAREN          [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]
  ! DOT             [ reduce using rule 18 (expression -> LOOP expression DO expression .) ]

    dots                           shift and go to state 50

state 140

    (28) body -> body SEPARATOR expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    END             reduce using rule 28 (body -> body SEPARATOR expression .)
    SEPARATOR       reduce using rule 28 (body -> body SEPARATOR expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 141

    (71) expression -> IDENTIFIER LBRACKET expression RBRACKET .

    LESS_THEN       reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER_THEN    reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    LESS_EQUALS     reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER_EQUALS  reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOT_EQUALS      reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NAND            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOR             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    XOR             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQ              reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    IMPL            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DOT             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    $end            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEPARATOR       reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DO              reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    END             reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    THEN            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    IN              reduce using rule 71 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)


state 142

    (23) expression -> IF expression THEN expression .
    (38) expression -> IF expression THEN expression . ELSE expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 23 (expression -> IF expression THEN expression .)
    SEPARATOR       reduce using rule 23 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 23 (expression -> IF expression THEN expression .)
    DO              reduce using rule 23 (expression -> IF expression THEN expression .)
    END             reduce using rule 23 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 23 (expression -> IF expression THEN expression .)
    COMMA           reduce using rule 23 (expression -> IF expression THEN expression .)
    RBRACKET        reduce using rule 23 (expression -> IF expression THEN expression .)
    BEGIN           reduce using rule 23 (expression -> IF expression THEN expression .)
    IN              reduce using rule 23 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 165
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! GREATER_THEN    [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! AND             [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! NAND            [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! OR              [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! NOR             [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! XOR             [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! IMPL            [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! PLUS            [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! ASSIGN          [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! LPAREN          [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! DOT             [ reduce using rule 23 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 23 (expression -> IF expression THEN expression .) ]

    dots                           shift and go to state 50

state 143

    (39) expression -> LOCAL assign_list IN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    SEPARATOR       reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    RPAREN          reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    DO              reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    END             reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    THEN            reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    COMMA           reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    RBRACKET        reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    BEGIN           reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    ELSE            reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    IN              reduce using rule 39 (expression -> LOCAL assign_list IN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! AND             [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! NAND            [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! OR              [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! NOR             [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! XOR             [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! IMPL            [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! ASSIGN          [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! LPAREN          [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]
  ! DOT             [ reduce using rule 39 (expression -> LOCAL assign_list IN expression .) ]

    dots                           shift and go to state 50

state 144

    (3) assign_list -> assign_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 166


state 145

    (2) assign_list -> IDENTIFIER ASSIGN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    IN              reduce using rule 2 (assign_list -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 2 (assign_list -> IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 146

    (40) expression -> LOCK identifier_list IN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    SEPARATOR       reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    RPAREN          reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    DO              reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    END             reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    THEN            reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    COMMA           reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    RBRACKET        reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    BEGIN           reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    ELSE            reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    IN              reduce using rule 40 (expression -> LOCK identifier_list IN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! AND             [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! NAND            [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! OR              [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! NOR             [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! XOR             [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! IMPL            [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! ASSIGN          [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! LPAREN          [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> LOCK identifier_list IN expression .) ]

    dots                           shift and go to state 50

state 147

    (17) identifier_list -> IDENTIFIER COMMA identifier_list .

    IN              reduce using rule 17 (identifier_list -> IDENTIFIER COMMA identifier_list .)
    ARROW           reduce using rule 17 (identifier_list -> IDENTIFIER COMMA identifier_list .)
    RPAREN          reduce using rule 17 (identifier_list -> IDENTIFIER COMMA identifier_list .)


state 148

    (44) expression -> LAMBDA LPAREN RPAREN ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 167
    dots                           shift and go to state 27

state 149

    (46) expression -> LAMBDA LPAREN identifier_list RPAREN . ARROW expression

    ARROW           shift and go to state 168


state 150

    (45) expression -> LAMBDA identifier_list ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    RPAREN          reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    DO              reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    END             reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    THEN            reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    COMMA           reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    RBRACKET        reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    BEGIN           reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    ELSE            reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    IN              reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> LAMBDA identifier_list ARROW expression .) ]

    dots                           shift and go to state 50

state 151

    (53) expression -> LIST LPAREN expression_list RPAREN .

    LESS_THEN       reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    AND             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    NAND            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    OR              reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    NOR             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    XOR             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    EQ              reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    ASSIGN          reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    DOT             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    $end            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    DO              reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    END             reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    THEN            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)
    IN              reduce using rule 53 (expression -> LIST LPAREN expression_list RPAREN .)


state 152

    (54) expression -> LOCALREC assign_list IN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    SEPARATOR       reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    RPAREN          reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    DO              reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    END             reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    THEN            reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    COMMA           reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    RBRACKET        reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    BEGIN           reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    ELSE            reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    IN              reduce using rule 54 (expression -> LOCALREC assign_list IN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! EQUALS          [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! AND             [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! NAND            [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! OR              [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! NOR             [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! XOR             [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! IMPL            [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! ASSIGN          [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! LPAREN          [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> LOCALREC assign_list IN expression .) ]

    dots                           shift and go to state 50

state 153

    (61) expression -> STRUCT BEGIN struct_body END .

    LESS_THEN       reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    GREATER_THEN    reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    LESS_EQUALS     reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    GREATER_EQUALS  reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    EQUALS          reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    NOT_EQUALS      reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    AND             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    NAND            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    OR              reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    NOR             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    XOR             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    EQ              reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    NEQ             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    IMPL            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    PLUS            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    MINUS           reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    TIMES           reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    DIVIDE          reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    ASSIGN          reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    LPAREN          reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    DOT             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    $end            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    SEPARATOR       reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    RPAREN          reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    DO              reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    END             reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    THEN            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    COMMA           reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    RBRACKET        reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    BEGIN           reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    ELSE            reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)
    IN              reduce using rule 61 (expression -> STRUCT BEGIN struct_body END .)


state 154

    (56) struct_body -> struct_body SEPARATOR . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 169


state 155

    (55) struct_body -> IDENTIFIER ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 170
    dots                           shift and go to state 27

state 156

    (25) expression_list -> expression COMMA expression_list .

    RBRACKET        reduce using rule 25 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 25 (expression_list -> expression COMMA expression_list .)


state 157

    (63) expression -> ARRAY LPAREN expression_list RPAREN .

    LESS_THEN       reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    AND             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NAND            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    OR              reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NOR             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    XOR             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    EQ              reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    ASSIGN          reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DOT             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    $end            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DO              reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    END             reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    THEN            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)
    IN              reduce using rule 63 (expression -> ARRAY LPAREN expression_list RPAREN .)


state 158

    (72) expression -> EXTEND expression BEGIN struct_body . END
    (56) struct_body -> struct_body . SEPARATOR IDENTIFIER ASSIGN expression

    END             shift and go to state 171
    SEPARATOR       shift and go to state 154


state 159

    (73) expression -> SIZE LPAREN IDENTIFIER RPAREN .

    LESS_THEN       reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    GREATER_THEN    reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    LESS_EQUALS     reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    GREATER_EQUALS  reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    EQUALS          reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    NOT_EQUALS      reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    AND             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    NAND            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    OR              reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    NOR             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    XOR             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    EQ              reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    NEQ             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    IMPL            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    PLUS            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MINUS           reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    TIMES           reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ASSIGN          reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DOT             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    SEPARATOR       reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DO              reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    END             reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    THEN            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    RBRACKET        reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    BEGIN           reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELSE            reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    IN              reduce using rule 73 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)


state 160

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 172
    dots                           shift and go to state 27

state 161

    (4) expression -> PROC LPAREN identifier_list RPAREN identifier_list . ARROW expression

    ARROW           shift and go to state 173


state 162

    (26) expression -> PROC LPAREN identifier_list RPAREN ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 174
    dots                           shift and go to state 27

state 163

    (19) expression -> PROC LPAREN RPAREN identifier_list ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 175
    dots                           shift and go to state 27

state 164

    (47) expression -> PROC LPAREN RPAREN ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    RPAREN          reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    DO              reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    END             reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    THEN            reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    COMMA           reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    RBRACKET        reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    BEGIN           reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    ELSE            reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    IN              reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> PROC LPAREN RPAREN ARROW expression .) ]

    dots                           shift and go to state 50

state 165

    (38) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 176
    dots                           shift and go to state 27

state 166

    (3) assign_list -> assign_list COMMA IDENTIFIER ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 177
    dots                           shift and go to state 27

state 167

    (44) expression -> LAMBDA LPAREN RPAREN ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    RPAREN          reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    DO              reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    END             reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    THEN            reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    COMMA           reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    RBRACKET        reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    BEGIN           reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    ELSE            reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    IN              reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> LAMBDA LPAREN RPAREN ARROW expression .) ]

    dots                           shift and go to state 50

state 168

    (46) expression -> LAMBDA LPAREN identifier_list RPAREN ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 178
    dots                           shift and go to state 27

state 169

    (56) struct_body -> struct_body SEPARATOR IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 179


state 170

    (55) struct_body -> IDENTIFIER ASSIGN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    END             reduce using rule 55 (struct_body -> IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 55 (struct_body -> IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 171

    (72) expression -> EXTEND expression BEGIN struct_body END .

    LESS_THEN       reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    GREATER_THEN    reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    LESS_EQUALS     reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    GREATER_EQUALS  reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    EQUALS          reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    NOT_EQUALS      reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    AND             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    NAND            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    OR              reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    NOR             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    XOR             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    EQ              reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    NEQ             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    IMPL            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    PLUS            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    MINUS           reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    TIMES           reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    DIVIDE          reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    ASSIGN          reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    LPAREN          reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    DOT             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    $end            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    SEPARATOR       reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    RPAREN          reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    DO              reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    END             reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    THEN            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    COMMA           reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    RBRACKET        reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    BEGIN           reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    ELSE            reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)
    IN              reduce using rule 72 (expression -> EXTEND expression BEGIN struct_body END .)


state 172

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression . DO expression
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    DO              shift and go to state 180
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 173

    (4) expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 181
    dots                           shift and go to state 27

state 174

    (26) expression -> PROC LPAREN identifier_list RPAREN ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    RPAREN          reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    DO              reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    END             reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    THEN            reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    COMMA           reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    RBRACKET        reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    BEGIN           reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    ELSE            reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    IN              reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 26 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]

    dots                           shift and go to state 50

state 175

    (19) expression -> PROC LPAREN RPAREN identifier_list ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    RPAREN          reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    DO              reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    END             reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    THEN            reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    COMMA           reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    RBRACKET        reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    BEGIN           reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    ELSE            reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    IN              reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! PLUS            [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 19 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]

    dots                           shift and go to state 50

state 176

    (38) expression -> IF expression THEN expression ELSE expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    SEPARATOR       reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    END             reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    COMMA           reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    RBRACKET        reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    BEGIN           reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    IN              reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_THEN    [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LESS_EQUALS     [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOT_EQUALS      [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! AND             [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NAND            [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! OR              [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOR             [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! XOR             [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! IMPL            [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! ASSIGN          [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LPAREN          [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DOT             [ reduce using rule 38 (expression -> IF expression THEN expression ELSE expression .) ]

    dots                           shift and go to state 50

state 177

    (3) assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    IN              reduce using rule 3 (assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 3 (assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 178

    (46) expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    RPAREN          reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    DO              reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    END             reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    THEN            reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    COMMA           reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    RBRACKET        reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    BEGIN           reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    ELSE            reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    IN              reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> LAMBDA LPAREN identifier_list RPAREN ARROW expression .) ]

    dots                           shift and go to state 50

state 179

    (56) struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 182
    dots                           shift and go to state 27

state 180

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (5) expression -> . WHILE expression DO expression
    (6) expression -> . expression LESS_THEN expression
    (7) expression -> . expression GREATER_THEN expression
    (8) expression -> . expression LESS_EQUALS expression
    (9) expression -> . expression GREATER_EQUALS expression
    (10) expression -> . expression EQUALS expression
    (11) expression -> . expression NOT_EQUALS expression
    (13) expression -> . NUMBER
    (14) expression -> . FLOAT
    (15) expression -> . CHAR
    (18) expression -> . LOOP expression DO expression
    (19) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (20) expression -> . BEGIN body END
    (21) expression -> . IDENTIFIER
    (22) expression -> . NOT expression
    (23) expression -> . IF expression THEN expression
    (26) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (29) expression -> . MINUS expression
    (30) expression -> . expression AND expression
    (31) expression -> . expression NAND expression
    (32) expression -> . expression OR expression
    (33) expression -> . expression NOR expression
    (34) expression -> . expression XOR expression
    (35) expression -> . expression EQ expression
    (36) expression -> . expression NEQ expression
    (37) expression -> . expression IMPL expression
    (38) expression -> . IF expression THEN expression ELSE expression
    (39) expression -> . LOCAL assign_list IN expression
    (40) expression -> . LOCK identifier_list IN expression
    (41) expression -> . STRING
    (44) expression -> . LAMBDA LPAREN RPAREN ARROW expression
    (45) expression -> . LAMBDA identifier_list ARROW expression
    (46) expression -> . LAMBDA LPAREN identifier_list RPAREN ARROW expression
    (47) expression -> . PROC LPAREN RPAREN ARROW expression
    (48) expression -> . expression PLUS expression
    (49) expression -> . expression MINUS expression
    (50) expression -> . expression TIMES expression
    (51) expression -> . expression DIVIDE expression
    (52) expression -> . expression ASSIGN expression
    (53) expression -> . LIST LPAREN expression_list RPAREN
    (54) expression -> . LOCALREC assign_list IN expression
    (57) expression -> . LIST LPAREN RPAREN
    (58) expression -> . LPAREN expression RPAREN
    (59) expression -> . TRUE
    (60) expression -> . FALSE
    (61) expression -> . STRUCT BEGIN struct_body END
    (62) expression -> . LBRACKET expression_list RBRACKET
    (63) expression -> . ARRAY LPAREN expression_list RPAREN
    (64) expression -> . LAMBDA ARROW expression
    (65) expression -> . expression dots IDENTIFIER
    (66) expression -> . LBRACKET RBRACKET
    (67) expression -> . ARRAY LPAREN RPAREN
    (68) expression -> . expression LPAREN expression_list RPAREN
    (69) expression -> . dots IDENTIFIER
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (72) expression -> . EXTEND expression BEGIN struct_body END
    (73) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    FOR             shift and go to state 3
    PROC            shift and go to state 4
    WHILE           shift and go to state 6
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    CHAR            shift and go to state 9
    LOOP            shift and go to state 10
    BEGIN           shift and go to state 11
    IDENTIFIER      shift and go to state 12
    NOT             shift and go to state 13
    IF              shift and go to state 14
    MINUS           shift and go to state 15
    LOCAL           shift and go to state 16
    LOCK            shift and go to state 17
    STRING          shift and go to state 18
    LAMBDA          shift and go to state 19
    LIST            shift and go to state 20
    LOCALREC        shift and go to state 21
    LPAREN          shift and go to state 5
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23
    STRUCT          shift and go to state 24
    LBRACKET        shift and go to state 25
    ARRAY           shift and go to state 26
    EXTEND          shift and go to state 28
    SIZE            shift and go to state 29
    DOT             shift and go to state 30

    expression                     shift and go to state 183
    dots                           shift and go to state 27

state 181

    (4) expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    RPAREN          reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    DO              reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    END             reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    THEN            reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    COMMA           reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    RBRACKET        reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    BEGIN           reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    ELSE            reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    IN              reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! PLUS            [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! ASSIGN          [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 4 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]

    dots                           shift and go to state 50

state 182

    (56) struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    END             reduce using rule 56 (struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 56 (struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

    dots                           shift and go to state 50

state 183

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .
    (6) expression -> expression . LESS_THEN expression
    (7) expression -> expression . GREATER_THEN expression
    (8) expression -> expression . LESS_EQUALS expression
    (9) expression -> expression . GREATER_EQUALS expression
    (10) expression -> expression . EQUALS expression
    (11) expression -> expression . NOT_EQUALS expression
    (30) expression -> expression . AND expression
    (31) expression -> expression . NAND expression
    (32) expression -> expression . OR expression
    (33) expression -> expression . NOR expression
    (34) expression -> expression . XOR expression
    (35) expression -> expression . EQ expression
    (36) expression -> expression . NEQ expression
    (37) expression -> expression . IMPL expression
    (48) expression -> expression . PLUS expression
    (49) expression -> expression . MINUS expression
    (50) expression -> expression . TIMES expression
    (51) expression -> expression . DIVIDE expression
    (52) expression -> expression . ASSIGN expression
    (65) expression -> expression . dots IDENTIFIER
    (68) expression -> expression . LPAREN expression_list RPAREN
    (70) expression -> expression . LPAREN RPAREN
    (42) dots -> . DOT
    (43) dots -> . dots DOT

    $end            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    SEPARATOR       reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RPAREN          reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    DO              reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    END             reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    THEN            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    COMMA           reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RBRACKET        reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    BEGIN           reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    ELSE            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    IN              reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    LESS_THEN       shift and go to state 31
    GREATER_THEN    shift and go to state 32
    LESS_EQUALS     shift and go to state 33
    GREATER_EQUALS  shift and go to state 34
    EQUALS          shift and go to state 35
    NOT_EQUALS      shift and go to state 36
    AND             shift and go to state 37
    NAND            shift and go to state 38
    OR              shift and go to state 39
    NOR             shift and go to state 40
    XOR             shift and go to state 41
    EQ              shift and go to state 42
    NEQ             shift and go to state 43
    IMPL            shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48
    ASSIGN          shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 30

  ! LESS_THEN       [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQUALS          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! AND             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NAND            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! OR              [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOR             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! XOR             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQ              [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NEQ             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! IMPL            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! PLUS            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! TIMES           [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! ASSIGN          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LPAREN          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DOT             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]

    dots                           shift and go to state 50
